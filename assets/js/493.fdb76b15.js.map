{"version":3,"file":"js/493.fdb76b15.js","mappings":"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","sources":["webpack://qltools/./node_modules/mdui/dist/js/mdui.esm.js"],"sourcesContent":["/*!\n * mdui 1.0.2 (https://mdui.org)\n * Copyright 2016-2021 zdhxiong\n * Licensed under MIT\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isUndefined(target) {\n    return typeof target === 'undefined';\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isWindow(target) {\n    return target instanceof Window;\n}\nfunction isDocument(target) {\n    return target instanceof Document;\n}\nfunction isElement(target) {\n    return target instanceof Element;\n}\nfunction isNode(target) {\n    return target instanceof Node;\n}\n/**\n * 是否是 IE 浏览器\n */\nfunction isIE() {\n    // @ts-ignore\n    return !!window.document.documentMode;\n}\nfunction isArrayLike(target) {\n    if (isFunction(target) || isWindow(target)) {\n        return false;\n    }\n    return isNumber(target.length);\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction toElement(target) {\n    return isDocument(target) ? target.documentElement : target;\n}\n/**\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\n * @param string\n */\nfunction toCamelCase(string) {\n    return string\n        .replace(/^-ms-/, 'ms-')\n        .replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n/**\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\n * @param string\n */\nfunction toKebabCase(string) {\n    return string.replace(/[A-Z]/g, (replacer) => '-' + replacer.toLowerCase());\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n */\nfunction getComputedStyleValue(element, name) {\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\n}\n/**\n * 检查元素的 box-sizing 是否是 border-box\n * @param element\n */\nfunction isBorderBox(element) {\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\n}\n/**\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\n * @param element\n * @param direction\n * @param extra\n */\nfunction getExtraWidth(element, direction, extra) {\n    const position = direction === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n    return [0, 1].reduce((prev, _, index) => {\n        let prop = extra + position[index];\n        if (extra === 'border') {\n            prop += 'Width';\n        }\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\n    }, 0);\n}\n/**\n * 获取元素的样式值，对 width 和 height 进行过处理\n * @param element\n * @param name\n */\nfunction getStyle(element, name) {\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\n    if (name === 'width' || name === 'height') {\n        const valueNumber = element.getBoundingClientRect()[name];\n        if (isBorderBox(element)) {\n            return `${valueNumber}px`;\n        }\n        return `${valueNumber -\n            getExtraWidth(element, name, 'border') -\n            getExtraWidth(element, name, 'padding')}px`;\n    }\n    return getComputedStyleValue(element, name);\n}\n/**\n * 获取子节点组成的数组\n * @param target\n * @param parent\n */\nfunction getChildNodesArray(target, parent) {\n    const tempParent = document.createElement(parent);\n    tempParent.innerHTML = target;\n    return [].slice.call(tempParent.childNodes);\n}\n/**\n * 始终返回 false 的函数\n */\nfunction returnFalse() {\n    return false;\n}\n/**\n * 数值单位的 CSS 属性\n */\nconst cssNumber = [\n    'animationIterationCount',\n    'columnCount',\n    'fillOpacity',\n    'flexGrow',\n    'flexShrink',\n    'fontWeight',\n    'gridArea',\n    'gridColumn',\n    'gridColumnEnd',\n    'gridColumnStart',\n    'gridRow',\n    'gridRowEnd',\n    'gridRowStart',\n    'lineHeight',\n    'opacity',\n    'order',\n    'orphans',\n    'widows',\n    'zIndex',\n    'zoom',\n];\n\nfunction each(target, callback) {\n    if (isArrayLike(target)) {\n        for (let i = 0; i < target.length; i += 1) {\n            if (callback.call(target[i], i, target[i]) === false) {\n                return target;\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i += 1) {\n            if (callback.call(target[keys[i]], keys[i], target[keys[i]]) === false) {\n                return target;\n            }\n        }\n    }\n    return target;\n}\n\n/**\n * 为了使用模块扩充，这里不能使用默认导出\n */\nclass JQ {\n    constructor(arr) {\n        this.length = 0;\n        if (!arr) {\n            return this;\n        }\n        each(arr, (i, item) => {\n            // @ts-ignore\n            this[i] = item;\n        });\n        this.length = arr.length;\n        return this;\n    }\n}\n\nfunction get$() {\n    const $ = function (selector) {\n        if (!selector) {\n            return new JQ();\n        }\n        // JQ\n        if (selector instanceof JQ) {\n            return selector;\n        }\n        // function\n        if (isFunction(selector)) {\n            if (/complete|loaded|interactive/.test(document.readyState) &&\n                document.body) {\n                selector.call(document, $);\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), false);\n            }\n            return new JQ([document]);\n        }\n        // String\n        if (isString(selector)) {\n            const html = selector.trim();\n            // 根据 HTML 字符串创建 JQ 对象\n            if (html[0] === '<' && html[html.length - 1] === '>') {\n                let toCreate = 'div';\n                const tags = {\n                    li: 'ul',\n                    tr: 'tbody',\n                    td: 'tr',\n                    th: 'tr',\n                    tbody: 'table',\n                    option: 'select',\n                };\n                each(tags, (childTag, parentTag) => {\n                    if (html.indexOf(`<${childTag}`) === 0) {\n                        toCreate = parentTag;\n                        return false;\n                    }\n                    return;\n                });\n                return new JQ(getChildNodesArray(html, toCreate));\n            }\n            // 根据 CSS 选择器创建 JQ 对象\n            const isIdSelector = selector[0] === '#' && !selector.match(/[ .<>:~]/);\n            if (!isIdSelector) {\n                return new JQ(document.querySelectorAll(selector));\n            }\n            const element = document.getElementById(selector.slice(1));\n            if (element) {\n                return new JQ([element]);\n            }\n            return new JQ();\n        }\n        if (isArrayLike(selector) && !isNode(selector)) {\n            return new JQ(selector);\n        }\n        return new JQ([selector]);\n    };\n    $.fn = JQ.prototype;\n    return $;\n}\nconst $ = get$();\n\n// 避免页面加载完后直接执行css动画\n// https://css-tricks.com/transitions-only-after-page-load/\nsetTimeout(() => $('body').addClass('mdui-loaded'));\nconst mdui = {\n    $: $,\n};\n\n$.fn.each = function (callback) {\n    return each(this, callback);\n};\n\n/**\n * 检查 container 元素内是否包含 contains 元素\n * @param container 父元素\n * @param contains 子元素\n * @example\n```js\ncontains( document, document.body ); // true\ncontains( document.getElementById('test'), document ); // false\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\n```\n */\nfunction contains(container, contains) {\n    return container !== contains && toElement(container).contains(contains);\n}\n\n/**\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\n * @param first 第一个数组\n * @param second 该数组的元素将被追加到第一个数组中\n * @example\n```js\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\n// [ 0, 1, 2, 2, 3, 4 ]\n```\n */\nfunction merge(first, second) {\n    each(second, (_, value) => {\n        first.push(value);\n    });\n    return first;\n}\n\n$.fn.get = function (index) {\n    return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n};\n\n$.fn.find = function (selector) {\n    const foundElements = [];\n    this.each((_, element) => {\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\n    });\n    return new JQ(foundElements);\n};\n\n// 存储事件\nconst handlers = {};\n// 元素ID\nlet mduiElementId = 1;\n/**\n * 为元素赋予一个唯一的ID\n */\nfunction getElementId(element) {\n    const key = '_mduiEventId';\n    // @ts-ignore\n    if (!element[key]) {\n        // @ts-ignore\n        element[key] = ++mduiElementId;\n    }\n    // @ts-ignore\n    return element[key];\n}\n/**\n * 解析事件名中的命名空间\n */\nfunction parse(type) {\n    const parts = type.split('.');\n    return {\n        type: parts[0],\n        ns: parts.slice(1).sort().join(' '),\n    };\n}\n/**\n * 命名空间匹配规则\n */\nfunction matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\n}\n/**\n * 获取匹配的事件\n * @param element\n * @param type\n * @param func\n * @param selector\n */\nfunction getHandlers(element, type, func, selector) {\n    const event = parse(type);\n    return (handlers[getElementId(element)] || []).filter((handler) => handler &&\n        (!event.type || handler.type === event.type) &&\n        (!event.ns || matcherFor(event.ns).test(handler.ns)) &&\n        (!func || getElementId(handler.func) === getElementId(func)) &&\n        (!selector || handler.selector === selector));\n}\n/**\n * 添加事件监听\n * @param element\n * @param types\n * @param func\n * @param data\n * @param selector\n */\nfunction add(element, types, func, data, selector) {\n    const elementId = getElementId(element);\n    if (!handlers[elementId]) {\n        handlers[elementId] = [];\n    }\n    // 传入 data.useCapture 来设置 useCapture: true\n    let useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n    }\n    types.split(' ').forEach((type) => {\n        if (!type) {\n            return;\n        }\n        const event = parse(type);\n        function callFn(e, elem) {\n            // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n            const result = func.apply(elem, \n            // @ts-ignore\n            e._detail === undefined ? [e] : [e].concat(e._detail));\n            if (result === false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n        function proxyFn(e) {\n            // @ts-ignore\n            if (e._ns && !matcherFor(e._ns).test(event.ns)) {\n                return;\n            }\n            // @ts-ignore\n            e._data = data;\n            if (selector) {\n                // 事件代理\n                $(element)\n                    .find(selector)\n                    .get()\n                    .reverse()\n                    .forEach((elem) => {\n                    if (elem === e.target ||\n                        contains(elem, e.target)) {\n                        callFn(e, elem);\n                    }\n                });\n            }\n            else {\n                // 不使用事件代理\n                callFn(e, element);\n            }\n        }\n        const handler = {\n            type: event.type,\n            ns: event.ns,\n            func,\n            selector,\n            id: handlers[elementId].length,\n            proxy: proxyFn,\n        };\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.type, proxyFn, useCapture);\n    });\n}\n/**\n * 移除事件监听\n * @param element\n * @param types\n * @param func\n * @param selector\n */\nfunction remove(element, types, func, selector) {\n    const handlersInElement = handlers[getElementId(element)] || [];\n    const removeEvent = (handler) => {\n        delete handlersInElement[handler.id];\n        element.removeEventListener(handler.type, handler.proxy, false);\n    };\n    if (!types) {\n        handlersInElement.forEach((handler) => removeEvent(handler));\n    }\n    else {\n        types.split(' ').forEach((type) => {\n            if (type) {\n                getHandlers(element, type, func, selector).forEach((handler) => removeEvent(handler));\n            }\n        });\n    }\n}\n\n$.fn.trigger = function (type, extraParameters) {\n    const event = parse(type);\n    let eventObject;\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n    };\n    const isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(event.type) > -1;\n    if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        eventObject = new MouseEvent(event.type, eventParams);\n    }\n    else {\n        eventParams.detail = extraParameters;\n        eventObject = new CustomEvent(event.type, eventParams);\n    }\n    // @ts-ignore\n    eventObject._detail = extraParameters;\n    // @ts-ignore\n    eventObject._ns = event.ns;\n    return this.each(function () {\n        this.dispatchEvent(eventObject);\n    });\n};\n\nfunction extend(target, object1, ...objectN) {\n    objectN.unshift(object1);\n    each(objectN, (_, object) => {\n        each(object, (prop, value) => {\n            if (!isUndefined(value)) {\n                target[prop] = value;\n            }\n        });\n    });\n    return target;\n}\n\n/**\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\n *\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\n * @param obj 对象或数组\n * @example\n```js\nparam({ width: 1680, height: 1050 });\n// width=1680&height=1050\n```\n * @example\n```js\nparam({ foo: { one: 1, two: 2 }})\n// foo[one]=1&foo[two]=2\n```\n * @example\n```js\nparam({ids: [1, 2, 3]})\n// ids[]=1&ids[]=2&ids[]=3\n```\n * @example\n```js\nparam([\n  {\"name\":\"name\",\"value\":\"mdui\"},\n  {\"name\":\"password\",\"value\":\"123456\"}\n])\n// name=mdui&password=123456\n```\n */\nfunction param(obj) {\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\n        return '';\n    }\n    const args = [];\n    function destructure(key, value) {\n        let keyTmp;\n        if (isObjectLike(value)) {\n            each(value, (i, v) => {\n                if (Array.isArray(value) && !isObjectLike(v)) {\n                    keyTmp = '';\n                }\n                else {\n                    keyTmp = i;\n                }\n                destructure(`${key}[${keyTmp}]`, v);\n            });\n        }\n        else {\n            if (value == null || value === '') {\n                keyTmp = '=';\n            }\n            else {\n                keyTmp = `=${encodeURIComponent(value)}`;\n            }\n            args.push(encodeURIComponent(key) + keyTmp);\n        }\n    }\n    if (Array.isArray(obj)) {\n        each(obj, function () {\n            destructure(this.name, this.value);\n        });\n    }\n    else {\n        each(obj, destructure);\n    }\n    return args.join('&');\n}\n\n// 全局配置参数\nconst globalOptions = {};\n// 全局事件名\nconst ajaxEvents = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n};\n\n/**\n * 判断此请求方法是否通过查询字符串提交参数\n * @param method 请求方法，大写\n */\nfunction isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n}\n/**\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n * @param url\n * @param query\n */\nfunction appendQuery(url, query) {\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\n}\n/**\n * 合并请求参数，参数优先级：options > globalOptions > defaults\n * @param options\n */\nfunction mergeOptions(options) {\n    // 默认参数\n    const defaults = {\n        url: '',\n        method: 'GET',\n        data: '',\n        processData: true,\n        async: true,\n        cache: true,\n        username: '',\n        password: '',\n        headers: {},\n        xhrFields: {},\n        statusCode: {},\n        dataType: 'text',\n        contentType: 'application/x-www-form-urlencoded',\n        timeout: 0,\n        global: true,\n    };\n    // globalOptions 中的回调函数不合并\n    each(globalOptions, (key, value) => {\n        const callbacks = [\n            'beforeSend',\n            'success',\n            'error',\n            'complete',\n            'statusCode',\n        ];\n        // @ts-ignore\n        if (callbacks.indexOf(key) < 0 && !isUndefined(value)) {\n            defaults[key] = value;\n        }\n    });\n    return extend({}, defaults, options);\n}\n/**\n * 发送 ajax 请求\n * @param options\n * @example\n```js\najax({\n  method: \"POST\",\n  url: \"some.php\",\n  data: { name: \"John\", location: \"Boston\" }\n}).then(function( msg ) {\n  alert( \"Data Saved: \" + msg );\n});\n```\n */\nfunction ajax(options) {\n    // 是否已取消请求\n    let isCanceled = false;\n    // 事件参数\n    const eventParams = {};\n    // 参数合并\n    const mergedOptions = mergeOptions(options);\n    let url = mergedOptions.url || window.location.toString();\n    const method = mergedOptions.method.toUpperCase();\n    let data = mergedOptions.data;\n    const processData = mergedOptions.processData;\n    const async = mergedOptions.async;\n    const cache = mergedOptions.cache;\n    const username = mergedOptions.username;\n    const password = mergedOptions.password;\n    const headers = mergedOptions.headers;\n    const xhrFields = mergedOptions.xhrFields;\n    const statusCode = mergedOptions.statusCode;\n    const dataType = mergedOptions.dataType;\n    const contentType = mergedOptions.contentType;\n    const timeout = mergedOptions.timeout;\n    const global = mergedOptions.global;\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    if (data &&\n        (isQueryStringData(method) || processData) &&\n        !isString(data) &&\n        !(data instanceof ArrayBuffer) &&\n        !(data instanceof Blob) &&\n        !(data instanceof Document) &&\n        !(data instanceof FormData)) {\n        data = param(data);\n    }\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (data && isQueryStringData(method)) {\n        // 查询字符串拼接到 URL 中\n        url = appendQuery(url, data);\n        data = null;\n    }\n    /**\n     * 触发事件和回调函数\n     * @param event\n     * @param params\n     * @param callback\n     * @param args\n     */\n    function trigger(event, params, callback, ...args) {\n        // 触发全局事件\n        if (global) {\n            $(document).trigger(event, params);\n        }\n        // 触发 ajax 回调和事件\n        let result1;\n        let result2;\n        if (callback) {\n            // 全局回调\n            if (callback in globalOptions) {\n                // @ts-ignore\n                result1 = globalOptions[callback](...args);\n            }\n            // 自定义回调\n            if (mergedOptions[callback]) {\n                // @ts-ignore\n                result2 = mergedOptions[callback](...args);\n            }\n            // beforeSend 回调返回 false 时取消 ajax 请求\n            if (callback === 'beforeSend' &&\n                (result1 === false || result2 === false)) {\n                isCanceled = true;\n            }\n        }\n    }\n    // XMLHttpRequest 请求\n    function XHR() {\n        let textStatus;\n        return new Promise((resolve, reject) => {\n            // GET/HEAD 请求的缓存处理\n            if (isQueryStringData(method) && !cache) {\n                url = appendQuery(url, `_=${Date.now()}`);\n            }\n            // 创建 XHR\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, async, username, password);\n            if (contentType ||\n                (data && !isQueryStringData(method) && contentType !== false)) {\n                xhr.setRequestHeader('Content-Type', contentType);\n            }\n            // 设置 Accept\n            if (dataType === 'json') {\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n            }\n            // 添加 headers\n            if (headers) {\n                each(headers, (key, value) => {\n                    // undefined 值不发送，string 和 null 需要发送\n                    if (!isUndefined(value)) {\n                        xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\n                    }\n                });\n            }\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\n            const crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(url) &&\n                RegExp.$2 !== window.location.host;\n            if (!crossDomain) {\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            }\n            if (xhrFields) {\n                each(xhrFields, (key, value) => {\n                    // @ts-ignore\n                    xhr[key] = value;\n                });\n            }\n            eventParams.xhr = xhr;\n            eventParams.options = mergedOptions;\n            let xhrTimeout;\n            xhr.onload = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                // AJAX 返回的 HTTP 响应码是否表示成功\n                const isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) ||\n                    xhr.status === 304 ||\n                    xhr.status === 0;\n                let responseData;\n                if (isHttpStatusSuccess) {\n                    if (xhr.status === 204 || method === 'HEAD') {\n                        textStatus = 'nocontent';\n                    }\n                    else if (xhr.status === 304) {\n                        textStatus = 'notmodified';\n                    }\n                    else {\n                        textStatus = 'success';\n                    }\n                    if (dataType === 'json') {\n                        try {\n                            responseData =\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\n                            eventParams.data = responseData;\n                        }\n                        catch (err) {\n                            textStatus = 'parsererror';\n                            trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                            reject(new Error(textStatus));\n                        }\n                        if (textStatus !== 'parsererror') {\n                            trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                            resolve(responseData);\n                        }\n                    }\n                    else {\n                        responseData =\n                            method === 'HEAD'\n                                ? undefined\n                                : xhr.responseType === 'text' || xhr.responseType === ''\n                                    ? xhr.responseText\n                                    : xhr.response;\n                        eventParams.data = responseData;\n                        trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                        resolve(responseData);\n                    }\n                }\n                else {\n                    textStatus = 'error';\n                    trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                    reject(new Error(textStatus));\n                }\n                // statusCode\n                each([globalOptions.statusCode, statusCode], (_, func) => {\n                    if (func && func[xhr.status]) {\n                        if (isHttpStatusSuccess) {\n                            func[xhr.status](responseData, textStatus, xhr);\n                        }\n                        else {\n                            func[xhr.status](xhr, textStatus);\n                        }\n                    }\n                });\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, textStatus);\n            };\n            xhr.onerror = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, xhr.statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, 'error');\n                reject(new Error(xhr.statusText));\n            };\n            xhr.onabort = function () {\n                let statusText = 'abort';\n                if (xhrTimeout) {\n                    statusText = 'timeout';\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, statusText);\n                reject(new Error(statusText));\n            };\n            // ajax start 回调\n            trigger(ajaxEvents.ajaxStart, eventParams, 'beforeSend', xhr);\n            if (isCanceled) {\n                reject(new Error('cancel'));\n                return;\n            }\n            // Timeout\n            if (timeout > 0) {\n                xhrTimeout = setTimeout(() => {\n                    xhr.abort();\n                }, timeout);\n            }\n            // 发送 XHR\n            xhr.send(data);\n        });\n    }\n    return XHR();\n}\n\n$.ajax = ajax;\n\n/**\n * 为 Ajax 请求设置全局配置参数\n * @param options 键值对参数\n * @example\n```js\najaxSetup({\n  dataType: 'json',\n  method: 'POST',\n});\n```\n */\nfunction ajaxSetup(options) {\n    return extend(globalOptions, options);\n}\n\n$.ajaxSetup = ajaxSetup;\n\n$.contains = contains;\n\nconst dataNS = '_mduiElementDataStorage';\n\n/**\n * 在元素上设置键值对数据\n * @param element\n * @param object\n */\nfunction setObjectToElement(element, object) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        // @ts-ignore\n        element[dataNS] = {};\n    }\n    each(object, (key, value) => {\n        // @ts-ignore\n        element[dataNS][toCamelCase(key)] = value;\n    });\n}\nfunction data(element, key, value) {\n    // 根据键值对设置值\n    // data(element, { 'key' : 'value' })\n    if (isObjectLike(key)) {\n        setObjectToElement(element, key);\n        return key;\n    }\n    // 根据 key、value 设置值\n    // data(element, 'key', 'value')\n    if (!isUndefined(value)) {\n        setObjectToElement(element, { [key]: value });\n        return value;\n    }\n    // 获取所有值\n    // data(element)\n    if (isUndefined(key)) {\n        // @ts-ignore\n        return element[dataNS] ? element[dataNS] : {};\n    }\n    // 从 dataNS 中获取指定值\n    // data(element, 'key')\n    key = toCamelCase(key);\n    // @ts-ignore\n    if (element[dataNS] && key in element[dataNS]) {\n        // @ts-ignore\n        return element[dataNS][key];\n    }\n    return undefined;\n}\n\n$.data = data;\n\n$.each = each;\n\n$.extend = function (...objectN) {\n    if (objectN.length === 1) {\n        each(objectN[0], (prop, value) => {\n            this[prop] = value;\n        });\n        return this;\n    }\n    return extend(objectN.shift(), objectN.shift(), ...objectN);\n};\n\nfunction map(elements, callback) {\n    let value;\n    const ret = [];\n    each(elements, (i, element) => {\n        value = callback.call(window, element, i);\n        if (value != null) {\n            ret.push(value);\n        }\n    });\n    return [].concat(...ret);\n}\n\n$.map = map;\n\n$.merge = merge;\n\n$.param = param;\n\n/**\n * 移除指定元素上存放的数据\n * @param element 存放数据的元素\n * @param name\n * 数据键名\n *\n * 若未指定键名，将移除元素上所有数据\n *\n * 多个键名可以用空格分隔，或者用数组表示多个键名\n  @example\n```js\n// 移除元素上键名为 name 的数据\nremoveData(document.body, 'name');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, 'name1 name2');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, ['name1', 'name2']);\n```\n * @example\n```js\n// 移除元素上所有数据\nremoveData(document.body);\n```\n */\nfunction removeData(element, name) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        return;\n    }\n    const remove = (nameItem) => {\n        nameItem = toCamelCase(nameItem);\n        // @ts-ignore\n        if (element[dataNS][nameItem]) {\n            // @ts-ignore\n            element[dataNS][nameItem] = null;\n            // @ts-ignore\n            delete element[dataNS][nameItem];\n        }\n    };\n    if (isUndefined(name)) {\n        // @ts-ignore\n        element[dataNS] = null;\n        // @ts-ignore\n        delete element[dataNS];\n        // @ts-ignore\n    }\n    else if (isString(name)) {\n        name\n            .split(' ')\n            .filter((nameItem) => nameItem)\n            .forEach((nameItem) => remove(nameItem));\n    }\n    else {\n        each(name, (_, nameItem) => remove(nameItem));\n    }\n}\n\n$.removeData = removeData;\n\n/**\n * 过滤掉数组中的重复元素\n * @param arr 数组\n * @example\n```js\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\n// [1, 2, 12, 3]\n```\n */\nfunction unique(arr) {\n    const result = [];\n    each(arr, (_, val) => {\n        if (result.indexOf(val) === -1) {\n            result.push(val);\n        }\n    });\n    return result;\n}\n\n$.unique = unique;\n\n$.fn.add = function (selector) {\n    return new JQ(unique(merge(this.get(), $(selector).get())));\n};\n\neach(['add', 'remove', 'toggle'], (_, name) => {\n    $.fn[`${name}Class`] = function (className) {\n        if (name === 'remove' && !arguments.length) {\n            return this.each((_, element) => {\n                element.setAttribute('class', '');\n            });\n        }\n        return this.each((i, element) => {\n            if (!isElement(element)) {\n                return;\n            }\n            const classes = (isFunction(className)\n                ? className.call(element, i, element.getAttribute('class') || '')\n                : className)\n                .split(' ')\n                .filter((name) => name);\n            each(classes, (_, cls) => {\n                element.classList[name](cls);\n            });\n        });\n    };\n});\n\neach(['insertBefore', 'insertAfter'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\n        const $target = $(target);\n        const result = [];\n        $target.each((index, target) => {\n            if (!target.parentNode) {\n                return;\n            }\n            $element.each((_, element) => {\n                const newItem = index\n                    ? element.cloneNode(true)\n                    : element;\n                const existingItem = nameIndex ? target.nextSibling : target;\n                result.push(newItem);\n                target.parentNode.insertBefore(newItem, existingItem);\n            });\n        });\n        return $(nameIndex ? result.reverse() : result);\n    };\n});\n\n/**\n * 是否不是 HTML 字符串（包裹在 <> 中）\n * @param target\n */\nfunction isPlainText(target) {\n    return (isString(target) && (target[0] !== '<' || target[target.length - 1] !== '>'));\n}\neach(['before', 'after'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理\n        if (nameIndex === 1) {\n            args = args.reverse();\n        }\n        return this.each((index, element) => {\n            const targets = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            each(targets, (_, target) => {\n                let $target;\n                if (isPlainText(target)) {\n                    $target = $(getChildNodesArray(target, 'div'));\n                }\n                else if (index && isElement(target)) {\n                    $target = $(target.cloneNode(true));\n                }\n                else {\n                    $target = $(target);\n                }\n                $target[nameIndex ? 'insertAfter' : 'insertBefore'](element);\n            });\n        });\n    };\n});\n\n$.fn.off = function (types, selector, callback) {\n    // types 是对象\n    if (isObjectLike(types)) {\n        each(types, (type, fn) => {\n            // this.off('click', undefined, function () {})\n            // this.off('click', '.box', function () {})\n            this.off(type, selector, fn);\n        });\n        return this;\n    }\n    // selector 不存在\n    if (selector === false || isFunction(selector)) {\n        callback = selector;\n        selector = undefined;\n        // this.off('click', undefined, function () {})\n    }\n    // callback 传入 `false`，相当于 `return false`\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    return this.each(function () {\n        remove(this, types, callback, selector);\n    });\n};\n\n$.fn.on = function (types, selector, data, callback, one) {\n    // types 可以是 type/func 对象\n    if (isObjectLike(types)) {\n        // (types-Object, selector, data)\n        if (!isString(selector)) {\n            // (types-Object, data)\n            data = data || selector;\n            selector = undefined;\n        }\n        each(types, (type, fn) => {\n            // selector 和 data 都可能是 undefined\n            // @ts-ignore\n            this.on(type, selector, data, fn, one);\n        });\n        return this;\n    }\n    if (data == null && callback == null) {\n        // (types, fn)\n        callback = selector;\n        data = selector = undefined;\n    }\n    else if (callback == null) {\n        if (isString(selector)) {\n            // (types, selector, fn)\n            callback = data;\n            data = undefined;\n        }\n        else {\n            // (types, data, fn)\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    else if (!callback) {\n        return this;\n    }\n    // $().one()\n    if (one) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const _this = this;\n        const origCallback = callback;\n        callback = function (event) {\n            _this.off(event.type, selector, callback);\n            // eslint-disable-next-line prefer-rest-params\n            return origCallback.apply(this, arguments);\n        };\n    }\n    return this.each(function () {\n        add(this, types, callback, data, selector);\n    });\n};\n\neach(ajaxEvents, (name, eventName) => {\n    $.fn[name] = function (fn) {\n        return this.on(eventName, (e, params) => {\n            fn(e, params.xhr, params.options, params.data);\n        });\n    };\n});\n\n$.fn.map = function (callback) {\n    return new JQ(map(this, (element, i) => callback.call(element, i, element)));\n};\n\n$.fn.clone = function () {\n    return this.map(function () {\n        return this.cloneNode(true);\n    });\n};\n\n$.fn.is = function (selector) {\n    let isMatched = false;\n    if (isFunction(selector)) {\n        this.each((index, element) => {\n            if (selector.call(element, index, element)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    if (isString(selector)) {\n        this.each((_, element) => {\n            if (isDocument(element) || isWindow(element)) {\n                return;\n            }\n            // @ts-ignore\n            const matches = element.matches || element.msMatchesSelector;\n            if (matches.call(element, selector)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    const $compareWith = $(selector);\n    this.each((_, element) => {\n        $compareWith.each((_, compare) => {\n            if (element === compare) {\n                isMatched = true;\n            }\n        });\n    });\n    return isMatched;\n};\n\n$.fn.remove = function (selector) {\n    return this.each((_, element) => {\n        if (element.parentNode && (!selector || $(element).is(selector))) {\n            element.parentNode.removeChild(element);\n        }\n    });\n};\n\neach(['prepend', 'append'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        return this.each((index, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            const child = childLength\n                ? childNodes[nameIndex ? childLength - 1 : 0]\n                : document.createElement('div');\n            if (!childLength) {\n                element.appendChild(child);\n            }\n            let contents = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素\n            if (index) {\n                contents = contents.map((content) => {\n                    return isString(content) ? content : $(content).clone();\n                });\n            }\n            $(child)[nameIndex ? 'after' : 'before'](...contents);\n            if (!childLength) {\n                element.removeChild(child);\n            }\n        });\n    };\n});\n\neach(['appendTo', 'prependTo'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const extraChilds = [];\n        const $target = $(target).map((_, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            if (childLength) {\n                return childNodes[nameIndex ? 0 : childLength - 1];\n            }\n            const child = document.createElement('div');\n            element.appendChild(child);\n            extraChilds.push(child);\n            return child;\n        });\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\n        $(extraChilds).remove();\n        return $result;\n    };\n});\n\neach(['attr', 'prop', 'css'], (nameIndex, name) => {\n    function set(element, key, value) {\n        // 值为 undefined 时，不修改\n        if (isUndefined(value)) {\n            return;\n        }\n        switch (nameIndex) {\n            // attr\n            case 0:\n                if (isNull(value)) {\n                    element.removeAttribute(key);\n                }\n                else {\n                    element.setAttribute(key, value);\n                }\n                break;\n            // prop\n            case 1:\n                // @ts-ignore\n                element[key] = value;\n                break;\n            // css\n            default:\n                key = toCamelCase(key);\n                // @ts-ignore\n                element.style[key] = isNumber(value)\n                    ? `${value}${cssNumber.indexOf(key) > -1 ? '' : 'px'}`\n                    : value;\n                break;\n        }\n    }\n    function get(element, key) {\n        switch (nameIndex) {\n            // attr\n            case 0:\n                // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\n                const value = element.getAttribute(key);\n                return isNull(value) ? undefined : value;\n            // prop\n            case 1:\n                // @ts-ignore\n                return element[key];\n            // css\n            default:\n                return getStyle(element, key);\n        }\n    }\n    $.fn[name] = function (key, value) {\n        if (isObjectLike(key)) {\n            each(key, (k, v) => {\n                // @ts-ignore\n                this[name](k, v);\n            });\n            return this;\n        }\n        if (arguments.length === 1) {\n            const element = this[0];\n            return isElement(element) ? get(element, key) : undefined;\n        }\n        return this.each((i, element) => {\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\n        });\n    };\n});\n\n$.fn.children = function (selector) {\n    const children = [];\n    this.each((_, element) => {\n        each(element.childNodes, (__, childNode) => {\n            if (!isElement(childNode)) {\n                return;\n            }\n            if (!selector || $(childNode).is(selector)) {\n                children.push(childNode);\n            }\n        });\n    });\n    return new JQ(unique(children));\n};\n\n$.fn.slice = function (...args) {\n    return new JQ([].slice.apply(this, args));\n};\n\n$.fn.eq = function (index) {\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n    return new JQ(ret);\n};\n\nfunction dir($elements, nameIndex, node, selector, filter) {\n    const ret = [];\n    let target;\n    $elements.each((_, element) => {\n        target = element[node];\n        // 不能包含最顶层的 document 元素\n        while (target && isElement(target)) {\n            // prevUntil, nextUntil, parentsUntil\n            if (nameIndex === 2) {\n                if (selector && $(target).is(selector)) {\n                    break;\n                }\n                if (!filter || $(target).is(filter)) {\n                    ret.push(target);\n                }\n            }\n            // prev, next, parent\n            else if (nameIndex === 0) {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n                break;\n            }\n            // prevAll, nextAll, parents\n            else {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n            }\n            // @ts-ignore\n            target = target[node];\n        }\n    });\n    return new JQ(unique(ret));\n}\n\neach(['', 's', 'sUntil'], (nameIndex, name) => {\n    $.fn[`parent${name}`] = function (selector, filter) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\n    };\n});\n\n$.fn.closest = function (selector) {\n    if (this.is(selector)) {\n        return this;\n    }\n    const matched = [];\n    this.parents().each((_, element) => {\n        if ($(element).is(selector)) {\n            matched.push(element);\n            return false;\n        }\n    });\n    return new JQ(matched);\n};\n\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n// 从 `data-*` 中获取的值，需要经过该函数转换\nfunction getData(value) {\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    if (value === 'null') {\n        return null;\n    }\n    if (value === +value + '') {\n        return +value;\n    }\n    if (rbrace.test(value)) {\n        return JSON.parse(value);\n    }\n    return value;\n}\n// 若 value 不存在，则从 `data-*` 中获取值\nfunction dataAttr(element, key, value) {\n    if (isUndefined(value) && element.nodeType === 1) {\n        const name = 'data-' + toKebabCase(key);\n        value = element.getAttribute(name);\n        if (isString(value)) {\n            try {\n                value = getData(value);\n            }\n            catch (e) { }\n        }\n        else {\n            value = undefined;\n        }\n    }\n    return value;\n}\n$.fn.data = function (key, value) {\n    // 获取所有值\n    if (isUndefined(key)) {\n        if (!this.length) {\n            return undefined;\n        }\n        const element = this[0];\n        const resultData = data(element);\n        // window, document 上不存在 `data-*` 属性\n        if (element.nodeType !== 1) {\n            return resultData;\n        }\n        // 从 `data-*` 中获取值\n        const attrs = element.attributes;\n        let i = attrs.length;\n        while (i--) {\n            if (attrs[i]) {\n                let name = attrs[i].name;\n                if (name.indexOf('data-') === 0) {\n                    name = toCamelCase(name.slice(5));\n                    resultData[name] = dataAttr(element, name, resultData[name]);\n                }\n            }\n        }\n        return resultData;\n    }\n    // 同时设置多个值\n    if (isObjectLike(key)) {\n        return this.each(function () {\n            data(this, key);\n        });\n    }\n    // value 传入了 undefined\n    if (arguments.length === 2 && isUndefined(value)) {\n        return this;\n    }\n    // 设置值\n    if (!isUndefined(value)) {\n        return this.each(function () {\n            data(this, key, value);\n        });\n    }\n    // 获取值\n    if (!this.length) {\n        return undefined;\n    }\n    return dataAttr(this[0], key, data(this[0], key));\n};\n\n$.fn.empty = function () {\n    return this.each(function () {\n        this.innerHTML = '';\n    });\n};\n\n$.fn.extend = function (obj) {\n    each(obj, (prop, value) => {\n        // 在 JQ 对象上扩展方法时，需要自己添加 typescript 的类型定义\n        $.fn[prop] = value;\n    });\n    return this;\n};\n\n$.fn.filter = function (selector) {\n    if (isFunction(selector)) {\n        return this.map((index, element) => selector.call(element, index, element) ? element : undefined);\n    }\n    if (isString(selector)) {\n        return this.map((_, element) => $(element).is(selector) ? element : undefined);\n    }\n    const $selector = $(selector);\n    return this.map((_, element) => $selector.get().indexOf(element) > -1 ? element : undefined);\n};\n\n$.fn.first = function () {\n    return this.eq(0);\n};\n\n$.fn.has = function (selector) {\n    const $targets = isString(selector) ? this.find(selector) : $(selector);\n    const { length } = $targets;\n    return this.map(function () {\n        for (let i = 0; i < length; i += 1) {\n            if (contains(this, $targets[i])) {\n                return this;\n            }\n        }\n        return;\n    });\n};\n\n$.fn.hasClass = function (className) {\n    return this[0].classList.contains(className);\n};\n\n/**\n * 值上面的 padding、border、margin 处理\n * @param element\n * @param name\n * @param value\n * @param funcIndex\n * @param includeMargin\n * @param multiply\n */\nfunction handleExtraWidth(element, name, value, funcIndex, includeMargin, multiply) {\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\n    const getExtraWidthValue = (extra) => {\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\n            multiply);\n    };\n    if (funcIndex === 2 && includeMargin) {\n        value += getExtraWidthValue('margin');\n    }\n    if (isBorderBox(element)) {\n        // IE 为 box-sizing: border-box 时，得到的值不含 border 和 padding，这里先修复\n        // 仅获取时需要处理，multiply === 1 为 get\n        if (isIE() && multiply === 1) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 0) {\n            value -= getExtraWidthValue('border');\n        }\n        if (funcIndex === 1) {\n            value -= getExtraWidthValue('border');\n            value -= getExtraWidthValue('padding');\n        }\n    }\n    else {\n        if (funcIndex === 0) {\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 2) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n    }\n    return value;\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n */\nfunction get(element, name, funcIndex, includeMargin) {\n    const clientProp = `client${name}`;\n    const scrollProp = `scroll${name}`;\n    const offsetProp = `offset${name}`;\n    const innerProp = `inner${name}`;\n    // $(window).width()\n    if (isWindow(element)) {\n        // outerWidth, outerHeight 需要包含滚动条的宽度\n        return funcIndex === 2\n            ? element[innerProp]\n            : toElement(document)[clientProp];\n    }\n    // $(document).width()\n    if (isDocument(element)) {\n        const doc = toElement(element);\n        return Math.max(\n        // @ts-ignore\n        element.body[scrollProp], doc[scrollProp], \n        // @ts-ignore\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\n    }\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\n}\n/**\n * 设置元素的样式值\n * @param element\n * @param elementIndex\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n * @param value\n */\nfunction set(element, elementIndex, name, funcIndex, includeMargin, value) {\n    let computedValue = isFunction(value)\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\n        : value;\n    if (computedValue == null) {\n        return;\n    }\n    const $element = $(element);\n    const dimension = name.toLowerCase();\n    // 特殊的值，不需要计算 padding、border、margin\n    if (['auto', 'inherit', ''].indexOf(computedValue) > -1) {\n        $element.css(dimension, computedValue);\n        return;\n    }\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\n    const numerical = parseFloat(computedValue);\n    computedValue =\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\n            (suffix || 'px');\n    $element.css(dimension, computedValue);\n}\neach(['Width', 'Height'], (_, name) => {\n    each([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcIndex, funcName) => {\n        $.fn[funcName] = function (margin, value) {\n            // 是否是赋值操作\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\n            const includeMargin = margin === true || value === true;\n            // 获取第一个元素的值\n            if (!isSet) {\n                return this.length\n                    ? get(this[0], name, funcIndex, includeMargin)\n                    : undefined;\n            }\n            // 设置每个元素的值\n            return this.each((index, element) => set(element, index, name, funcIndex, includeMargin, margin));\n        };\n    });\n});\n\n$.fn.hide = function () {\n    return this.each(function () {\n        this.style.display = 'none';\n    });\n};\n\neach(['val', 'html', 'text'], (nameIndex, name) => {\n    const props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent',\n    };\n    const propName = props[nameIndex];\n    function get($elements) {\n        // text() 获取所有元素的文本\n        if (nameIndex === 2) {\n            // @ts-ignore\n            return map($elements, (element) => toElement(element)[propName]).join('');\n        }\n        // 空集合时，val() 和 html() 返回 undefined\n        if (!$elements.length) {\n            return undefined;\n        }\n        // val() 和 html() 仅获取第一个元素的内容\n        const firstElement = $elements[0];\n        // select multiple 返回数组\n        if (nameIndex === 0 && $(firstElement).is('select[multiple]')) {\n            return map($(firstElement).find('option:checked'), (element) => element.value);\n        }\n        // @ts-ignore\n        return firstElement[propName];\n    }\n    function set(element, value) {\n        // text() 和 html() 赋值为 undefined，则保持原内容不变\n        // val() 赋值为 undefined 则赋值为空\n        if (isUndefined(value)) {\n            if (nameIndex !== 0) {\n                return;\n            }\n            value = '';\n        }\n        if (nameIndex === 1 && isElement(value)) {\n            value = value.outerHTML;\n        }\n        // @ts-ignore\n        element[propName] = value;\n    }\n    $.fn[name] = function (value) {\n        // 获取值\n        if (!arguments.length) {\n            return get(this);\n        }\n        // 设置值\n        return this.each((i, element) => {\n            const computedValue = isFunction(value)\n                ? value.call(element, i, get($(element)))\n                : value;\n            // value 是数组，则选中数组中的元素，反选不在数组中的元素\n            if (nameIndex === 0 && Array.isArray(computedValue)) {\n                // select[multiple]\n                if ($(element).is('select[multiple]')) {\n                    map($(element).find('option'), (option) => (option.selected =\n                        computedValue.indexOf(option.value) >\n                            -1));\n                }\n                // 其他 checkbox, radio 等元素\n                else {\n                    element.checked =\n                        computedValue.indexOf(element.value) > -1;\n                }\n            }\n            else {\n                set(element, computedValue);\n            }\n        });\n    };\n});\n\n$.fn.index = function (selector) {\n    if (!arguments.length) {\n        return this.eq(0).parent().children().get().indexOf(this[0]);\n    }\n    if (isString(selector)) {\n        return $(selector).get().indexOf(this[0]);\n    }\n    return this.get().indexOf($(selector)[0]);\n};\n\n$.fn.last = function () {\n    return this.eq(-1);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`next${name}`] = function (selector, filter) {\n        return dir(this, nameIndex, 'nextElementSibling', selector, filter);\n    };\n});\n\n$.fn.not = function (selector) {\n    const $excludes = this.filter(selector);\n    return this.map((_, element) => $excludes.index(element) > -1 ? undefined : element);\n};\n\n/**\n * 返回最近的用于定位的父元素\n */\n$.fn.offsetParent = function () {\n    return this.map(function () {\n        let offsetParent = this.offsetParent;\n        while (offsetParent && $(offsetParent).css('position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || document.documentElement;\n    });\n};\n\nfunction floatStyle($element, name) {\n    return parseFloat($element.css(name));\n}\n$.fn.position = function () {\n    if (!this.length) {\n        return undefined;\n    }\n    const $element = this.eq(0);\n    let currentOffset;\n    let parentOffset = {\n        left: 0,\n        top: 0,\n    };\n    if ($element.css('position') === 'fixed') {\n        currentOffset = $element[0].getBoundingClientRect();\n    }\n    else {\n        currentOffset = $element.offset();\n        const $offsetParent = $element.offsetParent();\n        parentOffset = $offsetParent.offset();\n        parentOffset.top += floatStyle($offsetParent, 'border-top-width');\n        parentOffset.left += floatStyle($offsetParent, 'border-left-width');\n    }\n    return {\n        top: currentOffset.top - parentOffset.top - floatStyle($element, 'margin-top'),\n        left: currentOffset.left -\n            parentOffset.left -\n            floatStyle($element, 'margin-left'),\n    };\n};\n\nfunction get$1(element) {\n    if (!element.getClientRects().length) {\n        return { top: 0, left: 0 };\n    }\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset,\n    };\n}\nfunction set$1(element, value, index) {\n    const $element = $(element);\n    const position = $element.css('position');\n    if (position === 'static') {\n        $element.css('position', 'relative');\n    }\n    const currentOffset = get$1(element);\n    const currentTopString = $element.css('top');\n    const currentLeftString = $element.css('left');\n    let currentTop;\n    let currentLeft;\n    const calculatePosition = (position === 'absolute' || position === 'fixed') &&\n        (currentTopString + currentLeftString).indexOf('auto') > -1;\n    if (calculatePosition) {\n        const currentPosition = $element.position();\n        currentTop = currentPosition.top;\n        currentLeft = currentPosition.left;\n    }\n    else {\n        currentTop = parseFloat(currentTopString);\n        currentLeft = parseFloat(currentLeftString);\n    }\n    const computedValue = isFunction(value)\n        ? value.call(element, index, extend({}, currentOffset))\n        : value;\n    $element.css({\n        top: computedValue.top != null\n            ? computedValue.top - currentOffset.top + currentTop\n            : undefined,\n        left: computedValue.left != null\n            ? computedValue.left - currentOffset.left + currentLeft\n            : undefined,\n    });\n}\n$.fn.offset = function (value) {\n    // 获取坐标\n    if (!arguments.length) {\n        if (!this.length) {\n            return undefined;\n        }\n        return get$1(this[0]);\n    }\n    // 设置坐标\n    return this.each(function (index) {\n        set$1(this, value, index);\n    });\n};\n\n$.fn.one = function (types, selector, data, callback) {\n    // @ts-ignore\n    return this.on(types, selector, data, callback, true);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`prev${name}`] = function (selector, filter) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'previousElementSibling', selector, filter);\n    };\n});\n\n$.fn.removeAttr = function (attributeName) {\n    const names = attributeName.split(' ').filter((name) => name);\n    return this.each(function () {\n        each(names, (_, name) => {\n            this.removeAttribute(name);\n        });\n    });\n};\n\n$.fn.removeData = function (name) {\n    return this.each(function () {\n        removeData(this, name);\n    });\n};\n\n$.fn.removeProp = function (name) {\n    return this.each(function () {\n        try {\n            // @ts-ignore\n            delete this[name];\n        }\n        catch (e) { }\n    });\n};\n\n$.fn.replaceWith = function (newContent) {\n    this.each((index, element) => {\n        let content = newContent;\n        if (isFunction(content)) {\n            content = content.call(element, index, element.innerHTML);\n        }\n        else if (index && !isString(content)) {\n            content = $(content).clone();\n        }\n        $(element).before(content);\n    });\n    return this.remove();\n};\n\n$.fn.replaceAll = function (target) {\n    return $(target).map((index, element) => {\n        $(element).replaceWith(index ? this.clone() : this);\n        return this.get();\n    });\n};\n\n/**\n * 将表单元素的值组合成键值对数组\n * @returns {Array}\n */\n$.fn.serializeArray = function () {\n    const result = [];\n    this.each((_, element) => {\n        const elements = element instanceof HTMLFormElement ? element.elements : [element];\n        $(elements).each((_, element) => {\n            const $element = $(element);\n            const type = element.type;\n            const nodeName = element.nodeName.toLowerCase();\n            if (nodeName !== 'fieldset' &&\n                element.name &&\n                !element.disabled &&\n                ['input', 'select', 'textarea', 'keygen'].indexOf(nodeName) > -1 &&\n                ['submit', 'button', 'image', 'reset', 'file'].indexOf(type) === -1 &&\n                (['radio', 'checkbox'].indexOf(type) === -1 ||\n                    element.checked)) {\n                const value = $element.val();\n                const valueArr = Array.isArray(value) ? value : [value];\n                valueArr.forEach((value) => {\n                    result.push({\n                        name: element.name,\n                        value,\n                    });\n                });\n            }\n        });\n    });\n    return result;\n};\n\n$.fn.serialize = function () {\n    return param(this.serializeArray());\n};\n\nconst elementDisplay = {};\n/**\n * 获取元素的初始 display 值，用于 .show() 方法\n * @param nodeName\n */\nfunction defaultDisplay(nodeName) {\n    let element;\n    let display;\n    if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getStyle(element, 'display');\n        element.parentNode.removeChild(element);\n        if (display === 'none') {\n            display = 'block';\n        }\n        elementDisplay[nodeName] = display;\n    }\n    return elementDisplay[nodeName];\n}\n/**\n * 显示指定元素\n * @returns {JQ}\n */\n$.fn.show = function () {\n    return this.each(function () {\n        if (this.style.display === 'none') {\n            this.style.display = '';\n        }\n        if (getStyle(this, 'display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n        }\n    });\n};\n\n/**\n * 取得同辈元素的集合\n * @param selector {String=}\n * @returns {JQ}\n */\n$.fn.siblings = function (selector) {\n    return this.prevAll(selector).add(this.nextAll(selector));\n};\n\n/**\n * 切换元素的显示状态\n */\n$.fn.toggle = function () {\n    return this.each(function () {\n        getStyle(this, 'display') === 'none' ? $(this).show() : $(this).hide();\n    });\n};\n\n$.fn.reflow = function () {\n    return this.each(function () {\n        return this.clientLeft;\n    });\n};\n\n$.fn.transition = function (duration) {\n    if (isNumber(duration)) {\n        duration = `${duration}ms`;\n    }\n    return this.each(function () {\n        this.style.webkitTransitionDuration = duration;\n        this.style.transitionDuration = duration;\n    });\n};\n\n$.fn.transitionEnd = function (callback) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const events = ['webkitTransitionEnd', 'transitionend'];\n    function fireCallback(e) {\n        if (e.target !== this) {\n            return;\n        }\n        // @ts-ignore\n        callback.call(this, e);\n        each(events, (_, event) => {\n            that.off(event, fireCallback);\n        });\n    }\n    each(events, (_, event) => {\n        that.on(event, fireCallback);\n    });\n    return this;\n};\n\n$.fn.transformOrigin = function (transformOrigin) {\n    return this.each(function () {\n        this.style.webkitTransformOrigin = transformOrigin;\n        this.style.transformOrigin = transformOrigin;\n    });\n};\n\n$.fn.transform = function (transform) {\n    return this.each(function () {\n        this.style.webkitTransform = transform;\n        this.style.transform = transform;\n    });\n};\n\n/**\n * CSS 选择器和初始化函数组成的对象\n */\nconst entries = {};\n/**\n * 注册并执行初始化函数\n * @param selector CSS 选择器\n * @param apiInit 初始化函数\n * @param i 元素索引\n * @param element 元素\n */\nfunction mutation(selector, apiInit, i, element) {\n    let selectors = data(element, '_mdui_mutation');\n    if (!selectors) {\n        selectors = [];\n        data(element, '_mdui_mutation', selectors);\n    }\n    if (selectors.indexOf(selector) === -1) {\n        selectors.push(selector);\n        apiInit.call(element, i, element);\n    }\n}\n\n$.fn.mutation = function () {\n    return this.each((i, element) => {\n        const $this = $(element);\n        each(entries, (selector, apiInit) => {\n            if ($this.is(selector)) {\n                mutation(selector, apiInit, i, element);\n            }\n            $this.find(selector).each((i, element) => {\n                mutation(selector, apiInit, i, element);\n            });\n        });\n    });\n};\n\n$.showOverlay = function (zIndex) {\n    let $overlay = $('.mdui-overlay');\n    if ($overlay.length) {\n        $overlay.data('_overlay_is_deleted', false);\n        if (!isUndefined(zIndex)) {\n            $overlay.css('z-index', zIndex);\n        }\n    }\n    else {\n        if (isUndefined(zIndex)) {\n            zIndex = 2000;\n        }\n        $overlay = $('<div class=\"mdui-overlay\">')\n            .appendTo(document.body)\n            .reflow()\n            .css('z-index', zIndex);\n    }\n    let level = $overlay.data('_overlay_level') || 0;\n    return $overlay.data('_overlay_level', ++level).addClass('mdui-overlay-show');\n};\n\n$.hideOverlay = function (force = false) {\n    const $overlay = $('.mdui-overlay');\n    if (!$overlay.length) {\n        return;\n    }\n    let level = force ? 1 : $overlay.data('_overlay_level');\n    if (level > 1) {\n        $overlay.data('_overlay_level', --level);\n        return;\n    }\n    $overlay\n        .data('_overlay_level', 0)\n        .removeClass('mdui-overlay-show')\n        .data('_overlay_is_deleted', true)\n        .transitionEnd(() => {\n        if ($overlay.data('_overlay_is_deleted')) {\n            $overlay.remove();\n        }\n    });\n};\n\n$.lockScreen = function () {\n    const $body = $('body');\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    const newBodyWidth = $body.width();\n    let level = $body.data('_lockscreen_level') || 0;\n    $body\n        .addClass('mdui-locked')\n        .width(newBodyWidth)\n        .data('_lockscreen_level', ++level);\n};\n\n$.unlockScreen = function (force = false) {\n    const $body = $('body');\n    let level = force ? 1 : $body.data('_lockscreen_level');\n    if (level > 1) {\n        $body.data('_lockscreen_level', --level);\n        return;\n    }\n    $body.data('_lockscreen_level', 0).removeClass('mdui-locked').width('');\n};\n\n$.throttle = function (fn, delay = 16) {\n    let timer = null;\n    return function (...args) {\n        if (isNull(timer)) {\n            timer = setTimeout(() => {\n                fn.apply(this, args);\n                timer = null;\n            }, delay);\n        }\n    };\n};\n\nconst GUID = {};\n$.guid = function (name) {\n    if (!isUndefined(name) && !isUndefined(GUID[name])) {\n        return GUID[name];\n    }\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    const guid = '_' +\n        s4() +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        s4() +\n        s4();\n    if (!isUndefined(name)) {\n        GUID[name] = guid;\n    }\n    return guid;\n};\n\nmdui.mutation = function (selector, apiInit) {\n    if (isUndefined(selector) || isUndefined(apiInit)) {\n        $(document).mutation();\n        return;\n    }\n    entries[selector] = apiInit;\n    $(selector).each((i, element) => mutation(selector, apiInit, i, element));\n};\n\n/**\n * 触发组件上的事件\n * @param eventName 事件名\n * @param componentName 组件名\n * @param target 在该元素上触发事件\n * @param instance 组件实例\n * @param parameters 事件参数\n */\nfunction componentEvent(eventName, componentName, target, instance, parameters) {\n    if (!parameters) {\n        parameters = {};\n    }\n    // @ts-ignore\n    parameters.inst = instance;\n    const fullEventName = `${eventName}.mdui.${componentName}`;\n    // jQuery 事件\n    // @ts-ignore\n    if (typeof jQuery !== 'undefined') {\n        // @ts-ignore\n        jQuery(target).trigger(fullEventName, parameters);\n    }\n    const $target = $(target);\n    // mdui.jq 事件\n    $target.trigger(fullEventName, parameters);\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n        detail: parameters,\n    };\n    const eventObject = new CustomEvent(fullEventName, eventParams);\n    // @ts-ignore\n    eventObject._detail = parameters;\n    $target[0].dispatchEvent(eventObject);\n}\n\nconst $document = $(document);\nconst $window = $(window);\n$('body');\n\nconst DEFAULT_OPTIONS = {\n    tolerance: 5,\n    offset: 0,\n    initialClass: 'mdui-headroom',\n    pinnedClass: 'mdui-headroom-pinned-top',\n    unpinnedClass: 'mdui-headroom-unpinned-top',\n};\nclass Headroom {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS);\n        /**\n         * 当前 headroom 的状态\n         */\n        this.state = 'pinned';\n        /**\n         * 当前是否启用\n         */\n        this.isEnable = false;\n        /**\n         * 上次滚动后，垂直方向的距离\n         */\n        this.lastScrollY = 0;\n        /**\n         * AnimationFrame ID\n         */\n        this.rafId = 0;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        // tolerance 参数若为数值，转换为对象\n        const tolerance = this.options.tolerance;\n        if (isNumber(tolerance)) {\n            this.options.tolerance = {\n                down: tolerance,\n                up: tolerance,\n            };\n        }\n        this.enable();\n    }\n    /**\n     * 滚动时的处理\n     */\n    onScroll() {\n        this.rafId = window.requestAnimationFrame(() => {\n            const currentScrollY = window.pageYOffset;\n            const direction = currentScrollY > this.lastScrollY ? 'down' : 'up';\n            const tolerance = this.options.tolerance[direction];\n            const scrolled = Math.abs(currentScrollY - this.lastScrollY);\n            const toleranceExceeded = scrolled >= tolerance;\n            if (currentScrollY > this.lastScrollY &&\n                currentScrollY >= this.options.offset &&\n                toleranceExceeded) {\n                this.unpin();\n            }\n            else if ((currentScrollY < this.lastScrollY && toleranceExceeded) ||\n                currentScrollY <= this.options.offset) {\n                this.pin();\n            }\n            this.lastScrollY = currentScrollY;\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'headroom', this.$element, this);\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        if (this.state === 'pinning') {\n            this.state = 'pinned';\n            this.triggerEvent('pinned');\n        }\n        if (this.state === 'unpinning') {\n            this.state = 'unpinned';\n            this.triggerEvent('unpinned');\n        }\n    }\n    /**\n     * 使元素固定住\n     */\n    pin() {\n        if (this.state === 'pinning' ||\n            this.state === 'pinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('pin');\n        this.state = 'pinning';\n        this.$element\n            .removeClass(this.options.unpinnedClass)\n            .addClass(this.options.pinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 使元素隐藏\n     */\n    unpin() {\n        if (this.state === 'unpinning' ||\n            this.state === 'unpinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('unpin');\n        this.state = 'unpinning';\n        this.$element\n            .removeClass(this.options.pinnedClass)\n            .addClass(this.options.unpinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 启用 headroom 插件\n     */\n    enable() {\n        if (this.isEnable) {\n            return;\n        }\n        this.isEnable = true;\n        this.state = 'pinned';\n        this.$element\n            .addClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        this.lastScrollY = window.pageYOffset;\n        $window.on('scroll', () => this.onScroll());\n    }\n    /**\n     * 禁用 headroom 插件\n     */\n    disable() {\n        if (!this.isEnable) {\n            return;\n        }\n        this.isEnable = false;\n        this.$element\n            .removeClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        $window.off('scroll', () => this.onScroll());\n        window.cancelAnimationFrame(this.rafId);\n    }\n    /**\n     * 获取当前状态。共包含四种状态：`pinning`、`pinned`、`unpinning`、`unpinned`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Headroom = Headroom;\n\n/**\n * 解析 DATA API 参数\n * @param element 元素\n * @param name 属性名\n */\nfunction parseOptions(element, name) {\n    const attr = $(element).attr(name);\n    if (!attr) {\n        return {};\n    }\n    return new Function('', `var json = ${attr}; return JSON.parse(JSON.stringify(json));`)();\n}\n\nconst customAttr = 'mdui-headroom';\n$(() => {\n    mdui.mutation(`[${customAttr}]`, function () {\n        new mdui.Headroom(this, parseOptions(this, customAttr));\n    });\n});\n\nconst DEFAULT_OPTIONS$1 = {\n    accordion: false,\n};\nclass CollapseAbstract {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$1);\n        // CSS 类名\n        const classPrefix = `mdui-${this.getNamespace()}-item`;\n        this.classItem = classPrefix;\n        this.classItemOpen = `${classPrefix}-open`;\n        this.classHeader = `${classPrefix}-header`;\n        this.classBody = `${classPrefix}-body`;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.bindEvent();\n    }\n    /**\n     * 绑定事件\n     */\n    bindEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击 header 时，打开/关闭 item\n        this.$element.on('click', `.${this.classHeader}`, function () {\n            const $header = $(this);\n            const $item = $header.parent();\n            const $items = that.getItems();\n            $items.each((_, item) => {\n                if ($item.is(item)) {\n                    that.toggle(item);\n                }\n            });\n        });\n        // 点击关闭按钮时，关闭 item\n        this.$element.on('click', `[mdui-${this.getNamespace()}-item-close]`, function () {\n            const $target = $(this);\n            const $item = $target.parents(`.${that.classItem}`).first();\n            that.close($item);\n        });\n    }\n    /**\n     * 指定 item 是否处于打开状态\n     * @param $item\n     */\n    isOpen($item) {\n        return $item.hasClass(this.classItemOpen);\n    }\n    /**\n     * 获取所有 item\n     */\n    getItems() {\n        return this.$element.children(`.${this.classItem}`);\n    }\n    /**\n     * 获取指定 item\n     * @param item\n     */\n    getItem(item) {\n        if (isNumber(item)) {\n            return this.getItems().eq(item);\n        }\n        return $(item).first();\n    }\n    /**\n     * 触发组件事件\n     * @param name 事件名\n     * @param $item 事件触发的目标 item\n     */\n    triggerEvent(name, $item) {\n        componentEvent(name, this.getNamespace(), $item, this);\n    }\n    /**\n     * 动画结束回调\n     * @param $content body 元素\n     * @param $item item 元素\n     */\n    transitionEnd($content, $item) {\n        if (this.isOpen($item)) {\n            $content.transition(0).height('auto').reflow().transition('');\n            this.triggerEvent('opened', $item);\n        }\n        else {\n            $content.height('');\n            this.triggerEvent('closed', $item);\n        }\n    }\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    open(item) {\n        const $item = this.getItem(item);\n        if (this.isOpen($item)) {\n            return;\n        }\n        // 关闭其他项\n        if (this.options.accordion) {\n            this.$element.children(`.${this.classItemOpen}`).each((_, element) => {\n                const $element = $(element);\n                if (!$element.is($item)) {\n                    this.close($element);\n                }\n            });\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        $content\n            .height($content[0].scrollHeight)\n            .transitionEnd(() => this.transitionEnd($content, $item));\n        this.triggerEvent('open', $item);\n        $item.addClass(this.classItemOpen);\n    }\n    /**\n     * 关闭指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    close(item) {\n        const $item = this.getItem(item);\n        if (!this.isOpen($item)) {\n            return;\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        this.triggerEvent('close', $item);\n        $item.removeClass(this.classItemOpen);\n        $content\n            .transition(0)\n            .height($content[0].scrollHeight)\n            .reflow()\n            .transition('')\n            .height('')\n            .transitionEnd(() => this.transitionEnd($content, $item));\n    }\n    /**\n     * 切换指定面板项的打开状态\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    toggle(item) {\n        const $item = this.getItem(item);\n        this.isOpen($item) ? this.close($item) : this.open($item);\n    }\n    /**\n     * 打开所有面板项\n     */\n    openAll() {\n        this.getItems().each((_, element) => this.open(element));\n    }\n    /**\n     * 关闭所有面板项\n     */\n    closeAll() {\n        this.getItems().each((_, element) => this.close(element));\n    }\n}\n\nclass Collapse extends CollapseAbstract {\n    getNamespace() {\n        return 'collapse';\n    }\n}\nmdui.Collapse = Collapse;\n\nconst customAttr$1 = 'mdui-collapse';\n$(() => {\n    mdui.mutation(`[${customAttr$1}]`, function () {\n        new mdui.Collapse(this, parseOptions(this, customAttr$1));\n    });\n});\n\nclass Panel extends CollapseAbstract {\n    getNamespace() {\n        return 'panel';\n    }\n}\nmdui.Panel = Panel;\n\nconst customAttr$2 = 'mdui-panel';\n$(() => {\n    mdui.mutation(`[${customAttr$2}]`, function () {\n        new mdui.Panel(this, parseOptions(this, customAttr$2));\n    });\n});\n\nclass Table {\n    constructor(selector) {\n        /**\n         * 表头 tr 元素\n         */\n        this.$thRow = $();\n        /**\n         * 表格 body 中的 tr 元素\n         */\n        this.$tdRows = $();\n        /**\n         * 表头的 checkbox 元素\n         */\n        this.$thCheckbox = $();\n        /**\n         * 表格 body 中的 checkbox 元素\n         */\n        this.$tdCheckboxs = $();\n        /**\n         * 表格行是否可选择\n         */\n        this.selectable = false;\n        /**\n         * 已选中的行数\n         */\n        this.selectedRow = 0;\n        this.$element = $(selector).first();\n        this.init();\n    }\n    /**\n     * 初始化表格\n     */\n    init() {\n        this.$thRow = this.$element.find('thead tr');\n        this.$tdRows = this.$element.find('tbody tr');\n        this.selectable = this.$element.hasClass('mdui-table-selectable');\n        this.updateThCheckbox();\n        this.updateTdCheckbox();\n        this.updateNumericCol();\n    }\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag 标签名\n     */\n    createCheckboxHTML(tag) {\n        return (`<${tag} class=\"mdui-table-cell-checkbox\">` +\n            '<label class=\"mdui-checkbox\">' +\n            '<input type=\"checkbox\"/>' +\n            '<i class=\"mdui-checkbox-icon\"></i>' +\n            '</label>' +\n            `</${tag}>`);\n    }\n    /**\n     * 更新表头 checkbox 的状态\n     */\n    updateThCheckboxStatus() {\n        const checkbox = this.$thCheckbox[0];\n        const selectedRow = this.selectedRow;\n        const tdRowsLength = this.$tdRows.length;\n        checkbox.checked = selectedRow === tdRowsLength;\n        checkbox.indeterminate = !!selectedRow && selectedRow !== tdRowsLength;\n    }\n    /**\n     * 更新表格行的 checkbox\n     */\n    updateTdCheckbox() {\n        const rowSelectedClass = 'mdui-table-row-selected';\n        this.$tdRows.each((_, row) => {\n            const $row = $(row);\n            // 移除旧的 checkbox\n            $row.find('.mdui-table-cell-checkbox').remove();\n            if (!this.selectable) {\n                return;\n            }\n            // 创建 DOM\n            const $checkbox = $(this.createCheckboxHTML('td'))\n                .prependTo($row)\n                .find('input[type=\"checkbox\"]');\n            // 默认选中的行\n            if ($row.hasClass(rowSelectedClass)) {\n                $checkbox[0].checked = true;\n                this.selectedRow++;\n            }\n            this.updateThCheckboxStatus();\n            // 绑定事件\n            $checkbox.on('change', () => {\n                if ($checkbox[0].checked) {\n                    $row.addClass(rowSelectedClass);\n                    this.selectedRow++;\n                }\n                else {\n                    $row.removeClass(rowSelectedClass);\n                    this.selectedRow--;\n                }\n                this.updateThCheckboxStatus();\n            });\n            this.$tdCheckboxs = this.$tdCheckboxs.add($checkbox);\n        });\n    }\n    /**\n     * 更新表头的 checkbox\n     */\n    updateThCheckbox() {\n        // 移除旧的 checkbox\n        this.$thRow.find('.mdui-table-cell-checkbox').remove();\n        if (!this.selectable) {\n            return;\n        }\n        this.$thCheckbox = $(this.createCheckboxHTML('th'))\n            .prependTo(this.$thRow)\n            .find('input[type=\"checkbox\"]')\n            .on('change', () => {\n            const isCheckedAll = this.$thCheckbox[0].checked;\n            this.selectedRow = isCheckedAll ? this.$tdRows.length : 0;\n            this.$tdCheckboxs.each((_, checkbox) => {\n                checkbox.checked = isCheckedAll;\n            });\n            this.$tdRows.each((_, row) => {\n                isCheckedAll\n                    ? $(row).addClass('mdui-table-row-selected')\n                    : $(row).removeClass('mdui-table-row-selected');\n            });\n        });\n    }\n    /**\n     * 更新数值列\n     */\n    updateNumericCol() {\n        const numericClass = 'mdui-table-col-numeric';\n        this.$thRow.find('th').each((i, th) => {\n            const isNumericCol = $(th).hasClass(numericClass);\n            this.$tdRows.each((_, row) => {\n                const $td = $(row).find('td').eq(i);\n                isNumericCol\n                    ? $td.addClass(numericClass)\n                    : $td.removeClass(numericClass);\n            });\n        });\n    }\n}\nconst dataName = '_mdui_table';\n$(() => {\n    mdui.mutation('.mdui-table', function () {\n        const $element = $(this);\n        if (!$element.data(dataName)) {\n            $element.data(dataName, new Table($element));\n        }\n    });\n});\nmdui.updateTables = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-table') : $(selector);\n    $elements.each((_, element) => {\n        const $element = $(element);\n        const instance = $element.data(dataName);\n        if (instance) {\n            instance.init();\n        }\n        else {\n            $element.data(dataName, new Table($element));\n        }\n    });\n};\n\n/**\n * touch 事件后的 500ms 内禁用 mousedown 事件\n *\n * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n *\n * 在每一个事件中都使用 TouchHandler.isAllow(event) 判断事件是否可执行\n * 在 touchstart 和 touchmove、touchend、touchcancel\n *\n * (function () {\n *   $document\n *     .on(start, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       register(e);\n *       console.log(e.type);\n *     })\n *     .on(move, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(end, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(unlock, register);\n * })();\n */\nconst startEvent = 'touchstart mousedown';\nconst moveEvent = 'touchmove mousemove';\nconst endEvent = 'touchend mouseup';\nconst cancelEvent = 'touchcancel mouseleave';\nconst unlockEvent = 'touchend touchmove touchcancel';\nlet touches = 0;\n/**\n * 该事件是否被允许，在执行事件前调用该方法判断事件是否可以执行\n * 若已触发 touch 事件，则阻止之后的鼠标事件\n * @param event\n */\nfunction isAllow(event) {\n    return !(touches &&\n        [\n            'mousedown',\n            'mouseup',\n            'mousemove',\n            'click',\n            'mouseover',\n            'mouseout',\n            'mouseenter',\n            'mouseleave',\n        ].indexOf(event.type) > -1);\n}\n/**\n * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n * @param event\n */\nfunction register(event) {\n    if (event.type === 'touchstart') {\n        // 触发了 touch 事件\n        touches += 1;\n    }\n    else if (['touchmove', 'touchend', 'touchcancel'].indexOf(event.type) > -1) {\n        // touch 事件结束 500ms 后解除对鼠标事件的阻止\n        setTimeout(function () {\n            if (touches) {\n                touches -= 1;\n            }\n        }, 500);\n    }\n}\n\n/**\n * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n *\n * Inspired by https://github.com/fians/Waves\n */\n/**\n * 显示涟漪动画\n * @param event\n * @param $ripple\n */\nfunction show(event, $ripple) {\n    // 鼠标右键不产生涟漪\n    if (event instanceof MouseEvent && event.button === 2) {\n        return;\n    }\n    // 点击位置坐标\n    const touchPosition = typeof TouchEvent !== 'undefined' &&\n        event instanceof TouchEvent &&\n        event.touches.length\n        ? event.touches[0]\n        : event;\n    const touchStartX = touchPosition.pageX;\n    const touchStartY = touchPosition.pageY;\n    // 涟漪位置\n    const offset = $ripple.offset();\n    const height = $ripple.innerHeight();\n    const width = $ripple.innerWidth();\n    const center = {\n        x: touchStartX - offset.left,\n        y: touchStartY - offset.top,\n    };\n    const diameter = Math.max(Math.pow(Math.pow(height, 2) + Math.pow(width, 2), 0.5), 48);\n    // 涟漪扩散动画\n    const translate = `translate3d(${-center.x + width / 2}px,` +\n        `${-center.y + height / 2}px, 0) scale(1)`;\n    // 涟漪的 DOM 结构，并缓存动画效果\n    $(`<div class=\"mdui-ripple-wave\" ` +\n        `style=\"width:${diameter}px;height:${diameter}px;` +\n        `margin-top:-${diameter / 2}px;margin-left:-${diameter / 2}px;` +\n        `left:${center.x}px;top:${center.y}px;\"></div>`)\n        .data('_ripple_wave_translate', translate)\n        .prependTo($ripple)\n        .reflow()\n        .transform(translate);\n}\n/**\n * 隐藏并移除涟漪\n * @param $wave\n */\nfunction removeRipple($wave) {\n    if (!$wave.length || $wave.data('_ripple_wave_removed')) {\n        return;\n    }\n    $wave.data('_ripple_wave_removed', true);\n    let removeTimer = setTimeout(() => $wave.remove(), 400);\n    const translate = $wave.data('_ripple_wave_translate');\n    $wave\n        .addClass('mdui-ripple-wave-fill')\n        .transform(translate.replace('scale(1)', 'scale(1.01)'))\n        .transitionEnd(() => {\n        clearTimeout(removeTimer);\n        $wave\n            .addClass('mdui-ripple-wave-out')\n            .transform(translate.replace('scale(1)', 'scale(1.01)'));\n        removeTimer = setTimeout(() => $wave.remove(), 700);\n        setTimeout(() => {\n            $wave.transitionEnd(() => {\n                clearTimeout(removeTimer);\n                $wave.remove();\n            });\n        }, 0);\n    });\n}\n/**\n * 隐藏涟漪动画\n * @param this\n */\nfunction hide() {\n    const $ripple = $(this);\n    $ripple.children('.mdui-ripple-wave').each((_, wave) => {\n        removeRipple($(wave));\n    });\n    $ripple.off(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n}\n/**\n * 显示涟漪，并绑定 touchend 等事件\n * @param event\n */\nfunction showRipple(event) {\n    if (!isAllow(event)) {\n        return;\n    }\n    register(event);\n    // Chrome 59 点击滚动条时，会在 document 上触发事件\n    if (event.target === document) {\n        return;\n    }\n    const $target = $(event.target);\n    // 获取含 .mdui-ripple 类的元素\n    const $ripple = $target.hasClass('mdui-ripple')\n        ? $target\n        : $target.parents('.mdui-ripple').first();\n    if (!$ripple.length) {\n        return;\n    }\n    // 禁用状态的元素上不产生涟漪效果\n    if ($ripple.prop('disabled') || !isUndefined($ripple.attr('disabled'))) {\n        return;\n    }\n    if (event.type === 'touchstart') {\n        let hidden = false;\n        // touchstart 触发指定时间后开始涟漪动画，避免手指滑动时也触发涟漪\n        let timer = setTimeout(() => {\n            timer = 0;\n            show(event, $ripple);\n        }, 200);\n        const hideRipple = () => {\n            // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n                show(event, $ripple);\n            }\n            if (!hidden) {\n                hidden = true;\n                hide.call($ripple);\n            }\n        };\n        // 手指移动后，移除涟漪动画\n        const touchMove = () => {\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n            }\n            hideRipple();\n        };\n        $ripple.on('touchmove', touchMove).on('touchend touchcancel', hideRipple);\n    }\n    else {\n        show(event, $ripple);\n        $ripple.on(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n    }\n}\n$(() => {\n    $document.on(startEvent, showRipple).on(unlockEvent, register);\n});\n\nconst defaultData = {\n    reInit: false,\n    domLoadedEvent: false,\n};\n/**\n * 输入框事件\n * @param event\n * @param data\n */\nfunction inputEvent(event, data = {}) {\n    data = extend({}, defaultData, data);\n    const input = event.target;\n    const $input = $(input);\n    const eventType = event.type;\n    const value = $input.val();\n    // 文本框类型\n    const inputType = $input.attr('type') || '';\n    if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(inputType) > -1) {\n        return;\n    }\n    const $textfield = $input.parent('.mdui-textfield');\n    // 输入框是否聚焦\n    if (eventType === 'focus') {\n        $textfield.addClass('mdui-textfield-focus');\n    }\n    if (eventType === 'blur') {\n        $textfield.removeClass('mdui-textfield-focus');\n    }\n    // 输入框是否为空\n    if (eventType === 'blur' || eventType === 'input') {\n        value\n            ? $textfield.addClass('mdui-textfield-not-empty')\n            : $textfield.removeClass('mdui-textfield-not-empty');\n    }\n    // 输入框是否禁用\n    input.disabled\n        ? $textfield.addClass('mdui-textfield-disabled')\n        : $textfield.removeClass('mdui-textfield-disabled');\n    // 表单验证\n    if ((eventType === 'input' || eventType === 'blur') &&\n        !data.domLoadedEvent &&\n        input.validity) {\n        input.validity.valid\n            ? $textfield.removeClass('mdui-textfield-invalid-html5')\n            : $textfield.addClass('mdui-textfield-invalid-html5');\n    }\n    // textarea 高度自动调整\n    if ($input.is('textarea')) {\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        const inputValue = value;\n        let hasExtraSpace = false;\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n            $input.val(' ' + inputValue);\n            hasExtraSpace = true;\n        }\n        // 设置 textarea 高度\n        $input.outerHeight('');\n        const height = $input.outerHeight();\n        const scrollHeight = input.scrollHeight;\n        if (scrollHeight > height) {\n            $input.outerHeight(scrollHeight);\n        }\n        // 计算完，还原 textarea 的值\n        if (hasExtraSpace) {\n            $input.val(inputValue);\n        }\n    }\n    // 实时字数统计\n    if (data.reInit) {\n        $textfield.find('.mdui-textfield-counter').remove();\n    }\n    const maxLength = $input.attr('maxlength');\n    if (maxLength) {\n        if (data.reInit || data.domLoadedEvent) {\n            $('<div class=\"mdui-textfield-counter\">' +\n                `<span class=\"mdui-textfield-counter-inputed\"></span> / ${maxLength}` +\n                '</div>').appendTo($textfield);\n        }\n        $textfield\n            .find('.mdui-textfield-counter-inputed')\n            .text(value.length.toString());\n    }\n    // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n    if ($textfield.find('.mdui-textfield-helper').length ||\n        $textfield.find('.mdui-textfield-error').length ||\n        maxLength) {\n        $textfield.addClass('mdui-textfield-has-bottom');\n    }\n}\n$(() => {\n    // 绑定事件\n    $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n    // 可展开文本框展开\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .addClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')[0]\n            .focus();\n    });\n    // 可展开文本框关闭\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .removeClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')\n            .val('');\n    });\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n        $(this).find('.mdui-textfield-input').trigger('input', {\n            domLoadedEvent: true,\n        });\n    });\n});\nmdui.updateTextFields = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-textfield') : $(selector);\n    $elements.each((_, element) => {\n        $(element).find('.mdui-textfield-input').trigger('input', {\n            reInit: true,\n        });\n    });\n};\n\n/**\n * 滑块的值改变后修改滑块样式\n * @param $slider\n */\nfunction updateValueStyle($slider) {\n    const data = $slider.data();\n    const $track = data._slider_$track;\n    const $fill = data._slider_$fill;\n    const $thumb = data._slider_$thumb;\n    const $input = data._slider_$input;\n    const min = data._slider_min;\n    const max = data._slider_max;\n    const isDisabled = data._slider_disabled;\n    const isDiscrete = data._slider_discrete;\n    const $thumbText = data._slider_$thumbText;\n    const value = $input.val();\n    const percent = ((value - min) / (max - min)) * 100;\n    $fill.width(`${percent}%`);\n    $track.width(`${100 - percent}%`);\n    if (isDisabled) {\n        $fill.css('padding-right', '6px');\n        $track.css('padding-left', '6px');\n    }\n    $thumb.css('left', `${percent}%`);\n    if (isDiscrete) {\n        $thumbText.text(value);\n    }\n    percent === 0\n        ? $slider.addClass('mdui-slider-zero')\n        : $slider.removeClass('mdui-slider-zero');\n}\n/**\n * 重新初始化滑块\n * @param $slider\n */\nfunction reInit($slider) {\n    const $track = $('<div class=\"mdui-slider-track\"></div>');\n    const $fill = $('<div class=\"mdui-slider-fill\"></div>');\n    const $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n    const $input = $slider.find('input[type=\"range\"]');\n    const isDisabled = $input[0].disabled;\n    const isDiscrete = $slider.hasClass('mdui-slider-discrete');\n    // 禁用状态\n    isDisabled\n        ? $slider.addClass('mdui-slider-disabled')\n        : $slider.removeClass('mdui-slider-disabled');\n    // 重新填充 HTML\n    $slider.find('.mdui-slider-track').remove();\n    $slider.find('.mdui-slider-fill').remove();\n    $slider.find('.mdui-slider-thumb').remove();\n    $slider.append($track).append($fill).append($thumb);\n    // 间续型滑块\n    let $thumbText = $();\n    if (isDiscrete) {\n        $thumbText = $('<span></span>');\n        $thumb.empty().append($thumbText);\n    }\n    $slider.data('_slider_$track', $track);\n    $slider.data('_slider_$fill', $fill);\n    $slider.data('_slider_$thumb', $thumb);\n    $slider.data('_slider_$input', $input);\n    $slider.data('_slider_min', $input.attr('min'));\n    $slider.data('_slider_max', $input.attr('max'));\n    $slider.data('_slider_disabled', isDisabled);\n    $slider.data('_slider_discrete', isDiscrete);\n    $slider.data('_slider_$thumbText', $thumbText);\n    // 设置默认值\n    updateValueStyle($slider);\n}\nconst rangeSelector = '.mdui-slider input[type=\"range\"]';\n$(() => {\n    // 滑块滑动事件\n    $document.on('input change', rangeSelector, function () {\n        const $slider = $(this).parent();\n        updateValueStyle($slider);\n    });\n    // 开始触摸滑块事件\n    $document.on(startEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        register(event);\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.addClass('mdui-slider-focus');\n    });\n    // 结束触摸滑块事件\n    $document.on(endEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.removeClass('mdui-slider-focus');\n    });\n    $document.on(unlockEvent, rangeSelector, register);\n    /**\n     * 初始化滑块\n     */\n    mdui.mutation('.mdui-slider', function () {\n        reInit($(this));\n    });\n});\nmdui.updateSliders = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-slider') : $(selector);\n    $elements.each((_, element) => {\n        reInit($(element));\n    });\n};\n\nconst DEFAULT_OPTIONS$2 = {\n    trigger: 'hover',\n};\nclass Fab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$2);\n        /**\n         * 当前 fab 的状态\n         */\n        this.state = 'closed';\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$btn = this.$element.find('.mdui-fab');\n        this.$dial = this.$element.find('.mdui-fab-dial');\n        this.$dialBtns = this.$dial.find('.mdui-fab');\n        if (this.options.trigger === 'hover') {\n            this.$btn.on('touchstart mouseenter', () => this.open());\n            this.$element.on('mouseleave', () => this.close());\n        }\n        if (this.options.trigger === 'click') {\n            this.$btn.on(startEvent, () => this.open());\n        }\n        // 触摸屏幕其他地方关闭快速拨号\n        $document.on(startEvent, (event) => {\n            if ($(event.target).parents('.mdui-fab-wrapper').length) {\n                return;\n            }\n            this.close();\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'fab', this.$element, this);\n    }\n    /**\n     * 当前是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开快速拨号菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * (this.$dialBtns.length - index)}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.css('height', 'auto').addClass('mdui-fab-dial-show');\n        // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n        if (this.$btn.find('.mdui-fab-opened').length) {\n            this.$btn.addClass('mdui-fab-opened');\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n        this.$dialBtns.first().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                this.state = 'opened';\n                this.triggerEvent('opened');\n            }\n        });\n    }\n    /**\n     * 关闭快速拨号菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * index}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.removeClass('mdui-fab-dial-show');\n        this.$btn.removeClass('mdui-fab-opened');\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 从上往下依次关闭，最后一个关闭后才表示动画完成\n        this.$dialBtns.last().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                return;\n            }\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$dial.css('height', 0);\n        });\n    }\n    /**\n     * 切换快速拨号菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 以动画的形式显示整个浮动操作按钮\n     */\n    show() {\n        this.$element.removeClass('mdui-fab-hide');\n    }\n    /**\n     * 以动画的形式隐藏整个浮动操作按钮\n     */\n    hide() {\n        this.$element.addClass('mdui-fab-hide');\n    }\n    /**\n     * 返回当前快速拨号菜单的打开状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Fab = Fab;\n\nconst customAttr$3 = 'mdui-fab';\n$(() => {\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    $document.on('touchstart mousedown mouseover', `[${customAttr$3}]`, function () {\n        new mdui.Fab(this, parseOptions(this, customAttr$3));\n    });\n});\n\n/**\n * 最终生成的元素结构为：\n *  <select class=\"mdui-select\" mdui-select=\"{position: 'top'}\" style=\"display: none;\"> // $native\n *    <option value=\"1\">State 1</option>\n *    <option value=\"2\">State 2</option>\n *    <option value=\"3\" disabled=\"\">State 3</option>\n *  </select>\n *  <div class=\"mdui-select mdui-select-position-top\" style=\"\" id=\"88dec0e4-d4a2-c6d0-0e7f-1ba4501e0553\"> // $element\n *    <span class=\"mdui-select-selected\">State 1</span> // $selected\n *    <div class=\"mdui-select-menu\" style=\"transform-origin: center 100% 0px;\"> // $menu\n *      <div class=\"mdui-select-menu-item mdui-ripple\" selected=\"\">State 1</div> // $items\n *      <div class=\"mdui-select-menu-item mdui-ripple\">State 2</div>\n *      <div class=\"mdui-select-menu-item mdui-ripple\" disabled=\"\">State 3</div>\n *    </div>\n *  </div>\n */\nconst DEFAULT_OPTIONS$3 = {\n    position: 'auto',\n    gutter: 16,\n};\nclass Select {\n    constructor(selector, options = {}) {\n        /**\n         * 生成的 `<div class=\"mdui-select\">` 元素的 JQ 对象\n         */\n        this.$element = $();\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$3);\n        /**\n         * select 的 size 属性的值，根据该值设置 select 的高度\n         */\n        this.size = 0;\n        /**\n         * 占位元素，显示已选中菜单项的文本\n         */\n        this.$selected = $();\n        /**\n         * 菜单项的外层元素的 JQ 对象\n         */\n        this.$menu = $();\n        /**\n         * 菜单项数组的 JQ 对象\n         */\n        this.$items = $();\n        /**\n         * 当前选中的菜单项的索引号\n         */\n        this.selectedIndex = 0;\n        /**\n         * 当前选中菜单项的文本\n         */\n        this.selectedText = '';\n        /**\n         * 当前选中菜单项的值\n         */\n        this.selectedValue = '';\n        /**\n         * 当前 select 的状态\n         */\n        this.state = 'closed';\n        this.$native = $(selector).first();\n        this.$native.hide();\n        extend(this.options, options);\n        // 为当前 select 生成唯一 ID\n        this.uniqueID = $.guid();\n        // 生成 select\n        this.handleUpdate();\n        // 点击 select 外面区域关闭\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0])) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * 调整菜单位置\n     */\n    readjustMenu() {\n        const windowHeight = $window.height();\n        // mdui-select 高度\n        const elementHeight = this.$element.height();\n        // 菜单项高度\n        const $itemFirst = this.$items.first();\n        const itemHeight = $itemFirst.height();\n        const itemMargin = parseInt($itemFirst.css('margin-top'));\n        // 菜单高度\n        const menuWidth = this.$element.innerWidth() + 0.01; // 必须比真实宽度多一点，不然会出现省略号\n        let menuHeight = itemHeight * this.size + itemMargin * 2;\n        // mdui-select 在窗口中的位置\n        const elementTop = this.$element[0].getBoundingClientRect().top;\n        let transformOriginY;\n        let menuMarginTop;\n        if (this.options.position === 'bottom') {\n            menuMarginTop = elementHeight;\n            transformOriginY = '0px';\n        }\n        else if (this.options.position === 'top') {\n            menuMarginTop = -menuHeight - 1;\n            transformOriginY = '100%';\n        }\n        else {\n            // 菜单高度不能超过窗口高度\n            const menuMaxHeight = windowHeight - this.options.gutter * 2;\n            if (menuHeight > menuMaxHeight) {\n                menuHeight = menuMaxHeight;\n            }\n            // 菜单的 margin-top\n            menuMarginTop = -(itemMargin +\n                this.selectedIndex * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            const menuMaxMarginTop = -(itemMargin +\n                (this.size - 1) * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            if (menuMarginTop < menuMaxMarginTop) {\n                menuMarginTop = menuMaxMarginTop;\n            }\n            // 菜单不能超出窗口\n            const menuTop = elementTop + menuMarginTop;\n            if (menuTop < this.options.gutter) {\n                // 不能超出窗口上方\n                menuMarginTop = -(elementTop - this.options.gutter);\n            }\n            else if (menuTop + menuHeight + this.options.gutter > windowHeight) {\n                // 不能超出窗口下方\n                menuMarginTop = -(elementTop +\n                    menuHeight +\n                    this.options.gutter -\n                    windowHeight);\n            }\n            // transform 的 Y 轴坐标\n            transformOriginY = `${this.selectedIndex * itemHeight + itemHeight / 2 + itemMargin}px`;\n        }\n        // 设置样式\n        this.$element.innerWidth(menuWidth);\n        this.$menu\n            .innerWidth(menuWidth)\n            .height(menuHeight)\n            .css({\n            'margin-top': menuMarginTop + 'px',\n            'transform-origin': 'center ' + transformOriginY + ' 0',\n        });\n    }\n    /**\n     * select 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 对原生 select 组件进行了修改后，需要调用该方法\n     */\n    handleUpdate() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        this.selectedValue = this.$native.val();\n        const itemsData = [];\n        this.$items = $();\n        // 生成 HTML\n        this.$native.find('option').each((index, option) => {\n            const text = option.textContent || '';\n            const value = option.value;\n            const disabled = option.disabled;\n            const selected = this.selectedValue === value;\n            itemsData.push({\n                value,\n                text,\n                disabled,\n                selected,\n                index,\n            });\n            if (selected) {\n                this.selectedText = text;\n                this.selectedIndex = index;\n            }\n            this.$items = this.$items.add('<div class=\"mdui-select-menu-item mdui-ripple\"' +\n                (disabled ? ' disabled' : '') +\n                (selected ? ' selected' : '') +\n                `>${text}</div>`);\n        });\n        this.$selected = $(`<span class=\"mdui-select-selected\">${this.selectedText}</span>`);\n        this.$element = $(`<div class=\"mdui-select mdui-select-position-${this.options.position}\" ` +\n            `style=\"${this.$native.attr('style')}\" ` +\n            `id=\"${this.uniqueID}\"></div>`)\n            .show()\n            .append(this.$selected);\n        this.$menu = $('<div class=\"mdui-select-menu\"></div>')\n            .appendTo(this.$element)\n            .append(this.$items);\n        $(`#${this.uniqueID}`).remove();\n        this.$native.after(this.$element);\n        // 根据 select 的 size 属性设置高度\n        this.size = parseInt(this.$native.attr('size') || '0');\n        if (this.size <= 0) {\n            this.size = this.$items.length;\n            if (this.size > 8) {\n                this.size = 8;\n            }\n        }\n        // 点击选项时关闭下拉菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$items.on('click', function () {\n            if (that.state === 'closing') {\n                return;\n            }\n            const $item = $(this);\n            const index = $item.index();\n            const data = itemsData[index];\n            if (data.disabled) {\n                return;\n            }\n            that.$selected.text(data.text);\n            that.$native.val(data.value);\n            that.$items.removeAttr('selected');\n            $item.attr('selected', '');\n            that.selectedIndex = data.index;\n            that.selectedValue = data.value;\n            that.selectedText = data.text;\n            that.$native.trigger('change');\n            that.close();\n        });\n        // 点击 $element 时打开下拉菜单\n        this.$element.on('click', (event) => {\n            const $target = $(event.target);\n            // 在菜单上点击时不打开\n            if ($target.is('.mdui-select-menu') ||\n                $target.is('.mdui-select-menu-item')) {\n                return;\n            }\n            this.toggle();\n        });\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-select-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n            this.$menu.css('overflow-y', 'auto');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 恢复样式\n            this.$element.innerWidth('');\n            this.$menu.css({\n                'margin-top': '',\n                height: '',\n                width: '',\n            });\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'select', this.$native, this);\n    }\n    /**\n     * 切换下拉菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开下拉菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjustMenu();\n        this.$element.addClass('mdui-select-open');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭下拉菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$menu.css('overflow-y', '');\n        this.$element\n            .removeClass('mdui-select-open')\n            .addClass('mdui-select-closing');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 获取当前菜单的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Select = Select;\n\nconst customAttr$4 = 'mdui-select';\n$(() => {\n    mdui.mutation(`[${customAttr$4}]`, function () {\n        new mdui.Select(this, parseOptions(this, customAttr$4));\n    });\n});\n\n$(() => {\n    // 滚动时隐藏应用栏\n    mdui.mutation('.mdui-appbar-scroll-hide', function () {\n        new mdui.Headroom(this);\n    });\n    // 滚动时只隐藏应用栏中的工具栏\n    mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-toolbar',\n            unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n        });\n    });\n});\n\nconst DEFAULT_OPTIONS$4 = {\n    trigger: 'click',\n    loop: false,\n};\nclass Tab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$4);\n        /**\n         * 当前激活的 tab 的索引号。为 -1 时表示没有激活的选项卡，或不存在选项卡\n         */\n        this.activeIndex = -1;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$tabs = this.$element.children('a');\n        this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(this.$element);\n        // 根据 url hash 获取默认激活的选项卡\n        const hash = window.location.hash;\n        if (hash) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).attr('href') === hash) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 含 .mdui-tab-active 的元素默认激活\n        if (this.activeIndex === -1) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).hasClass('mdui-tab-active')) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 存在选项卡时，默认激活第一个选项卡\n        if (this.$tabs.length && this.activeIndex === -1) {\n            this.activeIndex = 0;\n        }\n        // 设置激活状态选项卡\n        this.setActive();\n        // 监听窗口大小变化事件，调整指示器位置\n        $window.on('resize', $.throttle(() => this.setIndicatorPosition(), 100));\n        // 监听点击选项卡事件\n        this.$tabs.each((_, tab) => {\n            this.bindTabEvent(tab);\n        });\n    }\n    /**\n     * 指定选项卡是否已禁用\n     * @param $tab\n     */\n    isDisabled($tab) {\n        return $tab.attr('disabled') !== undefined;\n    }\n    /**\n     * 绑定在 Tab 上点击或悬浮的事件\n     * @param tab\n     */\n    bindTabEvent(tab) {\n        const $tab = $(tab);\n        // 点击或鼠标移入触发的事件\n        const clickEvent = () => {\n            // 禁用状态的选项卡无法选中\n            if (this.isDisabled($tab)) {\n                return false;\n            }\n            this.activeIndex = this.$tabs.index(tab);\n            this.setActive();\n        };\n        // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n        $tab.on('click', clickEvent);\n        // trigger 为 hover 时，额外响应 mouseenter 事件\n        if (this.options.trigger === 'hover') {\n            $tab.on('mouseenter', clickEvent);\n        }\n        // 阻止链接的默认点击动作\n        $tab.on('click', () => {\n            if (($tab.attr('href') || '').indexOf('#') === 0) {\n                return false;\n            }\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     * @param $element\n     * @param parameters\n     */\n    triggerEvent(name, $element, parameters = {}) {\n        componentEvent(name, 'tab', $element, this, parameters);\n    }\n    /**\n     * 设置激活状态的选项卡\n     */\n    setActive() {\n        this.$tabs.each((index, tab) => {\n            const $tab = $(tab);\n            const targetId = $tab.attr('href') || '';\n            // 设置选项卡激活状态\n            if (index === this.activeIndex && !this.isDisabled($tab)) {\n                if (!$tab.hasClass('mdui-tab-active')) {\n                    this.triggerEvent('change', this.$element, {\n                        index: this.activeIndex,\n                        id: targetId.substr(1),\n                    });\n                    this.triggerEvent('show', $tab);\n                    $tab.addClass('mdui-tab-active');\n                }\n                $(targetId).show();\n                this.setIndicatorPosition();\n            }\n            else {\n                $tab.removeClass('mdui-tab-active');\n                $(targetId).hide();\n            }\n        });\n    }\n    /**\n     * 设置选项卡指示器的位置\n     */\n    setIndicatorPosition() {\n        // 选项卡数量为 0 时，不显示指示器\n        if (this.activeIndex === -1) {\n            this.$indicator.css({\n                left: 0,\n                width: 0,\n            });\n            return;\n        }\n        const $activeTab = this.$tabs.eq(this.activeIndex);\n        if (this.isDisabled($activeTab)) {\n            return;\n        }\n        const activeTabOffset = $activeTab.offset();\n        this.$indicator.css({\n            left: `${activeTabOffset.left +\n                this.$element[0].scrollLeft -\n                this.$element[0].getBoundingClientRect().left}px`,\n            width: `${$activeTab.innerWidth()}px`,\n        });\n    }\n    /**\n     * 切换到下一个选项卡\n     */\n    next() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.$tabs.length > this.activeIndex + 1) {\n            this.activeIndex++;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = 0;\n        }\n        this.setActive();\n    }\n    /**\n     * 切换到上一个选项卡\n     */\n    prev() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.activeIndex > 0) {\n            this.activeIndex--;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = this.$tabs.length - 1;\n        }\n        this.setActive();\n    }\n    /**\n     * 显示指定索引号、或指定id的选项卡\n     * @param index 索引号、或id\n     */\n    show(index) {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (isNumber(index)) {\n            this.activeIndex = index;\n        }\n        else {\n            this.$tabs.each((i, tab) => {\n                if (tab.id === index) {\n                    this.activeIndex = i;\n                    return false;\n                }\n            });\n        }\n        this.setActive();\n    }\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     * 在添加或删除选项卡时，需要调用该方法\n     */\n    handleUpdate() {\n        const $oldTabs = this.$tabs; // 旧的 tabs JQ对象\n        const $newTabs = this.$element.children('a'); // 新的 tabs JQ对象\n        const oldTabsElement = $oldTabs.get(); // 旧的 tabs 元素数组\n        const newTabsElement = $newTabs.get(); // 新的 tabs 元素数组\n        if (!$newTabs.length) {\n            this.activeIndex = -1;\n            this.$tabs = $newTabs;\n            this.setIndicatorPosition();\n            return;\n        }\n        // 重新遍历选项卡，找出新增的选项卡\n        $newTabs.each((index, tab) => {\n            // 有新增的选项卡\n            if (oldTabsElement.indexOf(tab) < 0) {\n                this.bindTabEvent(tab);\n                if (this.activeIndex === -1) {\n                    this.activeIndex = 0;\n                }\n                else if (index <= this.activeIndex) {\n                    this.activeIndex++;\n                }\n            }\n        });\n        // 找出被移除的选项卡\n        $oldTabs.each((index, tab) => {\n            // 有被移除的选项卡\n            if (newTabsElement.indexOf(tab) < 0) {\n                if (index < this.activeIndex) {\n                    this.activeIndex--;\n                }\n                else if (index === this.activeIndex) {\n                    this.activeIndex = 0;\n                }\n            }\n        });\n        this.$tabs = $newTabs;\n        this.setActive();\n    }\n}\nmdui.Tab = Tab;\n\nconst customAttr$5 = 'mdui-tab';\n$(() => {\n    mdui.mutation(`[${customAttr$5}]`, function () {\n        new mdui.Tab(this, parseOptions(this, customAttr$5));\n    });\n});\n\n/**\n * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n */\nconst DEFAULT_OPTIONS$5 = {\n    overlay: false,\n    swipe: false,\n};\nclass Drawer {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$5);\n        /**\n         * 当前是否显示着遮罩层\n         */\n        this.overlay = false;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.position = this.$element.hasClass('mdui-drawer-right')\n            ? 'right'\n            : 'left';\n        if (this.$element.hasClass('mdui-drawer-close')) {\n            this.state = 'closed';\n        }\n        else if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n        }\n        else if (this.isDesktop()) {\n            this.state = 'opened';\n        }\n        else {\n            this.state = 'closed';\n        }\n        // 浏览器窗口大小调整时\n        $window.on('resize', $.throttle(() => {\n            if (this.isDesktop()) {\n                // 由手机平板切换到桌面时\n                // 如果显示着遮罩，则隐藏遮罩\n                if (this.overlay && !this.options.overlay) {\n                    $.hideOverlay();\n                    this.overlay = false;\n                    $.unlockScreen();\n                }\n                // 没有强制关闭，则状态为打开状态\n                if (!this.$element.hasClass('mdui-drawer-close')) {\n                    this.state = 'opened';\n                }\n            }\n            else if (!this.overlay && this.state === 'opened') {\n                // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n                if (this.$element.hasClass('mdui-drawer-open')) {\n                    $.showOverlay();\n                    this.overlay = true;\n                    $.lockScreen();\n                    $('.mdui-overlay').one('click', () => this.close());\n                }\n                else {\n                    this.state = 'closed';\n                }\n            }\n        }, 100));\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-drawer-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n        this.swipeSupport();\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() >= 1024;\n    }\n    /**\n     * 滑动手势支持\n     */\n    swipeSupport() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 抽屉栏滑动手势控制\n        let openNavEventHandler;\n        let touchStartX;\n        let touchStartY;\n        let swipeStartX;\n        let swiping = null;\n        let maybeSwiping = false;\n        const $body = $('body');\n        // 手势触发的范围\n        const swipeAreaWidth = 24;\n        function setPosition(translateX) {\n            const rtlTranslateMultiplier = that.position === 'right' ? -1 : 1;\n            const transformCSS = `translate(${-1 * rtlTranslateMultiplier * translateX}px, 0) !important;`;\n            const transitionCSS = 'initial !important;';\n            that.$element.css('cssText', `transform: ${transformCSS}; transition: ${transitionCSS};`);\n        }\n        function cleanPosition() {\n            that.$element[0].style.transform = '';\n            that.$element[0].style.webkitTransform = '';\n            that.$element[0].style.transition = '';\n            that.$element[0].style.webkitTransition = '';\n        }\n        function getMaxTranslateX() {\n            return that.$element.width() + 10;\n        }\n        function getTranslateX(currentX) {\n            return Math.min(Math.max(swiping === 'closing'\n                ? swipeStartX - currentX\n                : getMaxTranslateX() + swipeStartX - currentX, 0), getMaxTranslateX());\n        }\n        function onBodyTouchEnd(event) {\n            if (swiping) {\n                let touchX = event.changedTouches[0].pageX;\n                if (that.position === 'right') {\n                    touchX = $body.width() - touchX;\n                }\n                const translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n                maybeSwiping = false;\n                const swipingState = swiping;\n                swiping = null;\n                if (swipingState === 'opening') {\n                    if (translateRatio < 0.92) {\n                        cleanPosition();\n                        that.open();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                else {\n                    if (translateRatio > 0.08) {\n                        cleanPosition();\n                        that.close();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                $.unlockScreen();\n            }\n            else {\n                maybeSwiping = false;\n            }\n            $body.off({\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function onBodyTouchMove(event) {\n            let touchX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchX = $body.width() - touchX;\n            }\n            const touchY = event.touches[0].pageY;\n            if (swiping) {\n                setPosition(getTranslateX(touchX));\n            }\n            else if (maybeSwiping) {\n                const dXAbs = Math.abs(touchX - touchStartX);\n                const dYAbs = Math.abs(touchY - touchStartY);\n                const threshold = 8;\n                if (dXAbs > threshold && dYAbs <= threshold) {\n                    swipeStartX = touchX;\n                    swiping = that.state === 'opened' ? 'closing' : 'opening';\n                    $.lockScreen();\n                    setPosition(getTranslateX(touchX));\n                }\n                else if (dXAbs <= threshold && dYAbs > threshold) {\n                    onBodyTouchEnd();\n                }\n            }\n        }\n        function onBodyTouchStart(event) {\n            touchStartX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchStartX = $body.width() - touchStartX;\n            }\n            touchStartY = event.touches[0].pageY;\n            if (that.state !== 'opened') {\n                if (touchStartX > swipeAreaWidth ||\n                    openNavEventHandler !== onBodyTouchStart) {\n                    return;\n                }\n            }\n            maybeSwiping = true;\n            $body.on({\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function enableSwipeHandling() {\n            if (!openNavEventHandler) {\n                $body.on('touchstart', onBodyTouchStart);\n                openNavEventHandler = onBodyTouchStart;\n            }\n        }\n        if (this.options.swipe) {\n            enableSwipeHandling();\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'drawer', this.$element, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 是否处于打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开抽屉栏\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        if (!this.options.overlay) {\n            $('body').addClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .removeClass('mdui-drawer-close')\n            .addClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (!this.isDesktop() || this.options.overlay) {\n            this.overlay = true;\n            $.showOverlay().one('click', () => this.close());\n            $.lockScreen();\n        }\n    }\n    /**\n     * 关闭抽屉栏\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        if (!this.options.overlay) {\n            $('body').removeClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .addClass('mdui-drawer-close')\n            .removeClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (this.overlay) {\n            $.hideOverlay();\n            this.overlay = false;\n            $.unlockScreen();\n        }\n    }\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 返回当前抽屉栏的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Drawer = Drawer;\n\nconst customAttr$6 = 'mdui-drawer';\n$(() => {\n    mdui.mutation(`[${customAttr$6}]`, function () {\n        const $element = $(this);\n        const options = parseOptions(this, customAttr$6);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $drawer = $(selector).first();\n        const instance = new mdui.Drawer($drawer, options);\n        $element.on('click', () => instance.toggle());\n    });\n});\n\nconst container = {};\nfunction queue(name, func) {\n    if (isUndefined(container[name])) {\n        container[name] = [];\n    }\n    if (isUndefined(func)) {\n        return container[name];\n    }\n    container[name].push(func);\n}\n/**\n * 从队列中移除第一个函数，并执行该函数\n * @param name 队列满\n */\nfunction dequeue(name) {\n    if (isUndefined(container[name])) {\n        return;\n    }\n    if (!container[name].length) {\n        return;\n    }\n    const func = container[name].shift();\n    func();\n}\n\nconst DEFAULT_OPTIONS$6 = {\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    destroyOnClosed: false,\n};\n/**\n * 当前显示的对话框实例\n */\nlet currentInst = null;\n/**\n * 队列名\n */\nconst queueName = '_mdui_dialog';\n/**\n * 窗口是否已锁定\n */\nlet isLockScreen = false;\n/**\n * 遮罩层元素\n */\nlet $overlay;\nclass Dialog {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$6);\n        /**\n         * 当前 dialog 的状态\n         */\n        this.state = 'closed';\n        /**\n         * dialog 元素是否是动态添加的\n         */\n        this.append = false;\n        this.$element = $(selector).first();\n        // 如果对话框元素没有在当前文档中，则需要添加\n        if (!contains(document.body, this.$element[0])) {\n            this.append = true;\n            $('body').append(this.$element);\n        }\n        extend(this.options, options);\n        // 绑定取消按钮事件\n        this.$element.find('[mdui-dialog-cancel]').each((_, cancel) => {\n            $(cancel).on('click', () => {\n                this.triggerEvent('cancel');\n                if (this.options.closeOnCancel) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定确认按钮事件\n        this.$element.find('[mdui-dialog-confirm]').each((_, confirm) => {\n            $(confirm).on('click', () => {\n                this.triggerEvent('confirm');\n                if (this.options.closeOnConfirm) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-dialog-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'dialog', this.$element, this);\n    }\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n    readjust() {\n        if (!currentInst) {\n            return;\n        }\n        const $element = currentInst.$element;\n        const $title = $element.children('.mdui-dialog-title');\n        const $content = $element.children('.mdui-dialog-content');\n        const $actions = $element.children('.mdui-dialog-actions');\n        // 调整 dialog 的 top 和 height 值\n        $element.height('');\n        $content.height('');\n        const elementHeight = $element.height();\n        $element.css({\n            top: `${($window.height() - elementHeight) / 2}px`,\n            height: `${elementHeight}px`,\n        });\n        // 调整 mdui-dialog-content 的高度\n        $content.innerHeight(elementHeight -\n            ($title.innerHeight() || 0) -\n            ($actions.innerHeight() || 0));\n    }\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n    hashchangeEvent() {\n        if (window.location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n            currentInst.close(true);\n        }\n    }\n    /**\n     * 点击遮罩层关闭对话框\n     * @param event\n     */\n    overlayClick(event) {\n        if ($(event.target).hasClass('mdui-overlay') &&\n            currentInst) {\n            currentInst.close();\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-dialog-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$element.hide();\n            // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n            if (!queue(queueName).length && !currentInst && isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n            $window.off('resize', $.throttle(this.readjust, 100));\n            if (this.options.destroyOnClosed) {\n                this.destroy();\n            }\n        }\n    }\n    /**\n     * 打开指定对话框\n     */\n    doOpen() {\n        currentInst = this;\n        if (!isLockScreen) {\n            $.lockScreen();\n            isLockScreen = true;\n        }\n        this.$element.show();\n        this.readjust();\n        $window.on('resize', $.throttle(this.readjust, 100));\n        // 打开消息框\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-dialog-open')\n            .transitionEnd(() => this.transitionEnd());\n        // 不存在遮罩层元素时，添加遮罩层\n        if (!$overlay) {\n            $overlay = $.showOverlay(5100);\n        }\n        // 点击遮罩层时是否关闭对话框\n        if (this.options.modal) {\n            $overlay.off('click', this.overlayClick);\n        }\n        else {\n            $overlay.on('click', this.overlayClick);\n        }\n        // 是否显示遮罩层，不显示时，把遮罩层背景透明\n        $overlay.css('opacity', this.options.overlay ? '' : 0);\n        if (this.options.history) {\n            // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n            // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n            let hash = window.location.hash.substring(1);\n            if (hash.indexOf('mdui-dialog') > -1) {\n                hash = hash.replace(/[&?]?mdui-dialog/g, '');\n            }\n            // 后退按钮关闭对话框\n            if (hash) {\n                window.location.hash = `${hash}${hash.indexOf('?') > -1 ? '&' : '?'}mdui-dialog`;\n            }\n            else {\n                window.location.hash = 'mdui-dialog';\n            }\n            $window.on('hashchange', this.hashchangeEvent);\n        }\n    }\n    /**\n     * 当前对话框是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开对话框\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n        if ((currentInst &&\n            (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n            queue(queueName).length) {\n            queue(queueName, () => this.doOpen());\n            return;\n        }\n        this.doOpen();\n    }\n    /**\n     * 关闭对话框\n     */\n    close(historyBack = false) {\n        // historyBack 是否需要后退历史纪录，默认为 `false`。该参数仅内部使用\n        // 为 `false` 时是通过 js 关闭，需要后退一个历史记录\n        // 为 `true` 时是通过后退按钮关闭，不需要后退历史记录\n        // setTimeout 的作用是：\n        // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n        setTimeout(() => {\n            if (!this.isOpen()) {\n                return;\n            }\n            currentInst = null;\n            this.state = 'closing';\n            this.triggerEvent('close');\n            // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n            if (!queue(queueName).length && $overlay) {\n                $.hideOverlay();\n                $overlay = null;\n                // 若仍存在遮罩，恢复遮罩的 z-index\n                $('.mdui-overlay').css('z-index', 2000);\n            }\n            this.$element\n                .removeClass('mdui-dialog-open')\n                .transitionEnd(() => this.transitionEnd());\n            if (this.options.history && !queue(queueName).length) {\n                if (!historyBack) {\n                    window.history.back();\n                }\n                $window.off('hashchange', this.hashchangeEvent);\n            }\n            // 关闭旧对话框，打开新对话框。\n            // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n            setTimeout(() => {\n                dequeue(queueName);\n            }, 100);\n        });\n    }\n    /**\n     * 切换对话框打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取对话框状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * 销毁对话框\n     */\n    destroy() {\n        if (this.append) {\n            this.$element.remove();\n        }\n        if (!queue(queueName).length && !currentInst) {\n            if ($overlay) {\n                $.hideOverlay();\n                $overlay = null;\n            }\n            if (isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n        }\n    }\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n    handleUpdate() {\n        this.readjust();\n    }\n}\n\n// esc 按下时关闭对话框\n$document.on('keydown', (event) => {\n    if (currentInst &&\n        currentInst.options.closeOnEsc &&\n        currentInst.state === 'opened' &&\n        event.keyCode === 27) {\n        currentInst.close();\n    }\n});\nmdui.Dialog = Dialog;\n\nconst customAttr$7 = 'mdui-dialog';\nconst dataName$1 = '_mdui_dialog';\n$(() => {\n    $document.on('click', `[${customAttr$7}]`, function () {\n        const options = parseOptions(this, customAttr$7);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $dialog = $(selector).first();\n        let instance = $dialog.data(dataName$1);\n        if (!instance) {\n            instance = new mdui.Dialog($dialog, options);\n            $dialog.data(dataName$1, instance);\n        }\n        instance.open();\n    });\n});\n\nconst DEFAULT_BUTTON = {\n    text: '',\n    bold: false,\n    close: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n};\nconst DEFAULT_OPTIONS$7 = {\n    title: '',\n    content: '',\n    buttons: [],\n    stackedButtons: false,\n    cssClass: '',\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    destroyOnClosed: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\nmdui.dialog = function (options) {\n    var _a, _b;\n    // 合并配置参数\n    options = extend({}, DEFAULT_OPTIONS$7, options);\n    each(options.buttons, (i, button) => {\n        options.buttons[i] = extend({}, DEFAULT_BUTTON, button);\n    });\n    // 按钮的 HTML\n    let buttonsHTML = '';\n    if ((_a = options.buttons) === null || _a === void 0 ? void 0 : _a.length) {\n        buttonsHTML = `<div class=\"mdui-dialog-actions${options.stackedButtons ? ' mdui-dialog-actions-stacked' : ''}\">`;\n        each(options.buttons, (_, button) => {\n            buttonsHTML +=\n                '<a href=\"javascript:void(0)\" ' +\n                    `class=\"mdui-btn mdui-ripple mdui-text-color-primary ${button.bold ? 'mdui-btn-bold' : ''}\">${button.text}</a>`;\n        });\n        buttonsHTML += '</div>';\n    }\n    // Dialog 的 HTML\n    const HTML = `<div class=\"mdui-dialog ${options.cssClass}\">` +\n        (options.title\n            ? `<div class=\"mdui-dialog-title\">${options.title}</div>`\n            : '') +\n        (options.content\n            ? `<div class=\"mdui-dialog-content\">${options.content}</div>`\n            : '') +\n        buttonsHTML +\n        '</div>';\n    // 实例化 Dialog\n    const instance = new mdui.Dialog(HTML, {\n        history: options.history,\n        overlay: options.overlay,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        destroyOnClosed: options.destroyOnClosed,\n    });\n    // 绑定按钮事件\n    if ((_b = options.buttons) === null || _b === void 0 ? void 0 : _b.length) {\n        instance.$element\n            .find('.mdui-dialog-actions .mdui-btn')\n            .each((index, button) => {\n            $(button).on('click', () => {\n                options.buttons[index].onClick(instance);\n                if (options.buttons[index].close) {\n                    instance.close();\n                }\n            });\n        });\n    }\n    // 绑定打开关闭事件\n    instance.$element\n        .on('open.mdui.dialog', () => {\n        options.onOpen(instance);\n    })\n        .on('opened.mdui.dialog', () => {\n        options.onOpened(instance);\n    })\n        .on('close.mdui.dialog', () => {\n        options.onClose(instance);\n    })\n        .on('closed.mdui.dialog', () => {\n        options.onClosed(instance);\n    });\n    instance.open();\n    return instance;\n};\n\nconst DEFAULT_OPTIONS$8 = {\n    confirmText: 'ok',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnConfirm: true,\n};\nmdui.alert = function (text, title, onConfirm, options) {\n    if (isFunction(title)) {\n        options = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$8, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-alert',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$9 = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n};\nmdui.confirm = function (text, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$9, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancel,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-confirm',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$a = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    type: 'text',\n    maxlength: 0,\n    defaultValue: '',\n    confirmOnEnter: false,\n};\nmdui.prompt = function (label, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$a, options);\n    const content = '<div class=\"mdui-textfield\">' +\n        (label ? `<label class=\"mdui-textfield-label\">${label}</label>` : '') +\n        (options.type === 'text'\n            ? `<input class=\"mdui-textfield-input\" type=\"text\" value=\"${options.defaultValue}\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}/>`\n            : '') +\n        (options.type === 'textarea'\n            ? `<textarea class=\"mdui-textfield-input\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}>${options.defaultValue}</textarea>`\n            : '') +\n        '</div>';\n    const onCancelClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onCancel(value, dialog);\n    };\n    const onConfirmClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onConfirm(value, dialog);\n    };\n    return mdui.dialog({\n        title,\n        content,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancelClick,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirmClick,\n            },\n        ],\n        cssClass: 'mdui-dialog-prompt',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        onOpen: (dialog) => {\n            // 初始化输入框\n            const $input = dialog.$element.find('.mdui-textfield-input');\n            mdui.updateTextFields($input);\n            // 聚焦到输入框\n            $input[0].focus();\n            // 捕捉文本框回车键，在单行文本框的情况下触发回调\n            if (options.type !== 'textarea' && options.confirmOnEnter === true) {\n                $input.on('keydown', (event) => {\n                    if (event.keyCode === 13) {\n                        const value = dialog.$element.find('.mdui-textfield-input').val();\n                        onConfirm(value, dialog);\n                        if (options.closeOnConfirm) {\n                            dialog.close();\n                        }\n                        return false;\n                    }\n                    return;\n                });\n            }\n            // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n            if (options.type === 'textarea') {\n                $input.on('input', () => dialog.handleUpdate());\n            }\n            // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n            if (options.maxlength) {\n                dialog.handleUpdate();\n            }\n        },\n    });\n};\n\nconst DEFAULT_OPTIONS$b = {\n    position: 'auto',\n    delay: 0,\n    content: '',\n};\nclass Tooltip {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$b);\n        /**\n         * 当前 tooltip 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的返回值\n         */\n        this.timeoutId = null;\n        this.$target = $(selector).first();\n        extend(this.options, options);\n        // 创建 Tooltip HTML\n        this.$element = $(`<div class=\"mdui-tooltip\" id=\"${$.guid()}\">${this.options.content}</div>`).appendTo(document.body);\n        // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$target\n            .on('touchstart mouseenter', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            register(event);\n            that.open();\n        })\n            .on('touchend mouseleave', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            that.close();\n        })\n            .on(unlockEvent, function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            register(event);\n        });\n    }\n    /**\n     * 元素是否已禁用\n     * @param element\n     */\n    isDisabled(element) {\n        return (element.disabled ||\n            $(element).attr('disabled') !== undefined);\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() > 1024;\n    }\n    /**\n     * 设置 Tooltip 的位置\n     */\n    setPosition() {\n        let marginLeft;\n        let marginTop;\n        // 触发的元素\n        const targetProps = this.$target[0].getBoundingClientRect();\n        // 触发的元素和 Tooltip 之间的距离\n        const targetMargin = this.isDesktop() ? 14 : 24;\n        // Tooltip 的宽度和高度\n        const tooltipWidth = this.$element[0].offsetWidth;\n        const tooltipHeight = this.$element[0].offsetHeight;\n        // Tooltip 的方向\n        let position = this.options.position;\n        // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n        if (position === 'auto') {\n            if (targetProps.top +\n                targetProps.height +\n                targetMargin +\n                tooltipHeight +\n                2 <\n                $window.height()) {\n                position = 'bottom';\n            }\n            else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n                position = 'top';\n            }\n            else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n                position = 'left';\n            }\n            else if (targetProps.width + targetMargin + tooltipWidth + 2 <\n                $window.width() - targetProps.left) {\n                position = 'right';\n            }\n            else {\n                position = 'bottom';\n            }\n        }\n        // 设置位置\n        switch (position) {\n            case 'bottom':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop = targetProps.height / 2 + targetMargin;\n                this.$element.transformOrigin('top center');\n                break;\n            case 'top':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop =\n                    -1 * (tooltipHeight + targetProps.height / 2 + targetMargin);\n                this.$element.transformOrigin('bottom center');\n                break;\n            case 'left':\n                marginLeft = -1 * (tooltipWidth + targetProps.width / 2 + targetMargin);\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center right');\n                break;\n            case 'right':\n                marginLeft = targetProps.width / 2 + targetMargin;\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center left');\n                break;\n        }\n        const targetOffset = this.$target.offset();\n        this.$element.css({\n            top: `${targetOffset.top + targetProps.height / 2}px`,\n            left: `${targetOffset.left + targetProps.width / 2}px`,\n            'margin-left': `${marginLeft}px`,\n            'margin-top': `${marginTop}px`,\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'tooltip', this.$target, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-tooltip-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 当前 tooltip 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 执行打开 tooltip\n     */\n    doOpen() {\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 打开 Tooltip\n     * @param options 允许每次打开时设置不同的参数\n     */\n    open(options) {\n        if (this.isOpen()) {\n            return;\n        }\n        const oldOptions = extend({}, this.options);\n        if (options) {\n            extend(this.options, options);\n        }\n        // tooltip 的内容有更新\n        if (oldOptions.content !== this.options.content) {\n            this.$element.html(this.options.content);\n        }\n        this.setPosition();\n        if (this.options.delay) {\n            this.timeoutId = setTimeout(() => this.doOpen(), this.options.delay);\n        }\n        else {\n            this.timeoutId = null;\n            this.doOpen();\n        }\n    }\n    /**\n     * 关闭 Tooltip\n     */\n    close() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$element\n            .removeClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 切换 Tooltip 的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取 Tooltip 状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Tooltip = Tooltip;\n\nconst customAttr$8 = 'mdui-tooltip';\nconst dataName$2 = '_mdui_tooltip';\n$(() => {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    $document.on('touchstart mouseover', `[${customAttr$8}]`, function () {\n        const $target = $(this);\n        let instance = $target.data(dataName$2);\n        if (!instance) {\n            instance = new mdui.Tooltip(this, parseOptions(this, customAttr$8));\n            $target.data(dataName$2, instance);\n        }\n    });\n});\n\nconst DEFAULT_OPTIONS$c = {\n    message: '',\n    timeout: 4000,\n    position: 'bottom',\n    buttonText: '',\n    buttonColor: '',\n    closeOnButtonClick: true,\n    closeOnOutsideClick: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onButtonClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\n/**\n * 当前打开着的 Snackbar\n */\nlet currentInst$1 = null;\n/**\n * 队列名\n */\nconst queueName$1 = '_mdui_snackbar';\nclass Snackbar {\n    constructor(options) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$c);\n        /**\n         * 当前 Snackbar 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的 ID\n         */\n        this.timeoutId = null;\n        extend(this.options, options);\n        // 按钮颜色\n        let buttonColorStyle = '';\n        let buttonColorClass = '';\n        if (this.options.buttonColor.indexOf('#') === 0 ||\n            this.options.buttonColor.indexOf('rgb') === 0) {\n            buttonColorStyle = `style=\"color:${this.options.buttonColor}\"`;\n        }\n        else if (this.options.buttonColor !== '') {\n            buttonColorClass = `mdui-text-color-${this.options.buttonColor}`;\n        }\n        // 添加 HTML\n        this.$element = $('<div class=\"mdui-snackbar\">' +\n            `<div class=\"mdui-snackbar-text\">${this.options.message}</div>` +\n            (this.options.buttonText\n                ? `<a href=\"javascript:void(0)\" class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ${buttonColorClass}\" ${buttonColorStyle}>${this.options.buttonText}</a>`\n                : '') +\n            '</div>').appendTo(document.body);\n        // 设置位置\n        this.setPosition('close');\n        this.$element.reflow().addClass(`mdui-snackbar-${this.options.position}`);\n    }\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param event\n     */\n    closeOnOutsideClick(event) {\n        const $target = $(event.target);\n        if (!$target.hasClass('mdui-snackbar') &&\n            !$target.parents('.mdui-snackbar').length) {\n            currentInst$1.close();\n        }\n    }\n    /**\n     * 设置 Snackbar 的位置\n     * @param state\n     */\n    setPosition(state) {\n        const snackbarHeight = this.$element[0].clientHeight;\n        const position = this.options.position;\n        let translateX;\n        let translateY;\n        // translateX\n        if (position === 'bottom' || position === 'top') {\n            translateX = '-50%';\n        }\n        else {\n            translateX = '0';\n        }\n        // translateY\n        if (state === 'open') {\n            translateY = '0';\n        }\n        else {\n            if (position === 'bottom') {\n                translateY = snackbarHeight;\n            }\n            if (position === 'top') {\n                translateY = -snackbarHeight;\n            }\n            if (position === 'left-top' || position === 'right-top') {\n                translateY = -snackbarHeight - 24;\n            }\n            if (position === 'left-bottom' || position === 'right-bottom') {\n                translateY = snackbarHeight + 24;\n            }\n        }\n        this.$element.transform(`translate(${translateX},${translateY}px`);\n    }\n    /**\n     * 打开 Snackbar\n     */\n    open() {\n        if (this.state === 'opening' || this.state === 'opened') {\n            return;\n        }\n        // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n        if (currentInst$1) {\n            queue(queueName$1, () => this.open());\n            return;\n        }\n        currentInst$1 = this;\n        // 开始打开\n        this.state = 'opening';\n        this.options.onOpen(this);\n        this.setPosition('open');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'opening') {\n                return;\n            }\n            this.state = 'opened';\n            this.options.onOpened(this);\n            // 有按钮时绑定事件\n            if (this.options.buttonText) {\n                this.$element.find('.mdui-snackbar-action').on('click', () => {\n                    this.options.onButtonClick(this);\n                    if (this.options.closeOnButtonClick) {\n                        this.close();\n                    }\n                });\n            }\n            // 点击 snackbar 的事件\n            this.$element.on('click', (event) => {\n                if (!$(event.target).hasClass('mdui-snackbar-action')) {\n                    this.options.onClick(this);\n                }\n            });\n            // 点击 Snackbar 外面的区域关闭\n            if (this.options.closeOnOutsideClick) {\n                $document.on(startEvent, this.closeOnOutsideClick);\n            }\n            // 超时后自动关闭\n            if (this.options.timeout) {\n                this.timeoutId = setTimeout(() => this.close(), this.options.timeout);\n            }\n        });\n    }\n    /**\n     * 关闭 Snackbar\n     */\n    close() {\n        if (this.state === 'closing' || this.state === 'closed') {\n            return;\n        }\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n        if (this.options.closeOnOutsideClick) {\n            $document.off(startEvent, this.closeOnOutsideClick);\n        }\n        this.state = 'closing';\n        this.options.onClose(this);\n        this.setPosition('close');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'closing') {\n                return;\n            }\n            currentInst$1 = null;\n            this.state = 'closed';\n            this.options.onClosed(this);\n            this.$element.remove();\n            dequeue(queueName$1);\n        });\n    }\n}\nmdui.snackbar = function (message, options = {}) {\n    if (isString(message)) {\n        options.message = message;\n    }\n    else {\n        options = message;\n    }\n    const instance = new Snackbar(options);\n    instance.open();\n    return instance;\n};\n\n$(() => {\n    // 切换导航项\n    $document.on('click', '.mdui-bottom-nav>a', function () {\n        const $item = $(this);\n        const $bottomNav = $item.parent();\n        $bottomNav.children('a').each((index, item) => {\n            const isThis = $item.is(item);\n            if (isThis) {\n                componentEvent('change', 'bottomNav', $bottomNav[0], undefined, {\n                    index,\n                });\n            }\n            isThis\n                ? $(item).addClass('mdui-bottom-nav-active')\n                : $(item).removeClass('mdui-bottom-nav-active');\n        });\n    });\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-down',\n            unpinnedClass: 'mdui-headroom-unpinned-down',\n        });\n    });\n});\n\n/**\n * layer 的 HTML 结构\n * @param index\n */\nfunction layerHTML(index = false) {\n    return (`<div class=\"mdui-spinner-layer ${index ? `mdui-spinner-layer-${index}` : ''}\">` +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-gap-patch\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '</div>');\n}\n/**\n * 填充 HTML\n * @param spinner\n */\nfunction fillHTML(spinner) {\n    const $spinner = $(spinner);\n    const layer = $spinner.hasClass('mdui-spinner-colorful')\n        ? layerHTML(1) + layerHTML(2) + layerHTML(3) + layerHTML(4)\n        : layerHTML();\n    $spinner.html(layer);\n}\n$(() => {\n    // 页面加载完后自动填充 HTML 结构\n    mdui.mutation('.mdui-spinner', function () {\n        fillHTML(this);\n    });\n});\nmdui.updateSpinners = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-spinner') : $(selector);\n    $elements.each(function () {\n        fillHTML(this);\n    });\n};\n\nconst DEFAULT_OPTIONS$d = {\n    position: 'auto',\n    align: 'auto',\n    gutter: 16,\n    fixed: false,\n    covered: 'auto',\n    subMenuTrigger: 'hover',\n    subMenuDelay: 200,\n};\nclass Menu {\n    constructor(anchorSelector, menuSelector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$d);\n        /**\n         * 当前菜单状态\n         */\n        this.state = 'closed';\n        this.$anchor = $(anchorSelector).first();\n        this.$element = $(menuSelector).first();\n        // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n        if (!this.$anchor.parent().is(this.$element.parent())) {\n            throw new Error('anchorSelector and menuSelector must be siblings');\n        }\n        extend(this.options, options);\n        // 是否是级联菜单\n        this.isCascade = this.$element.hasClass('mdui-menu-cascade');\n        // covered 参数处理\n        this.isCovered =\n            this.options.covered === 'auto' ? !this.isCascade : this.options.covered;\n        // 点击触发菜单切换\n        this.$anchor.on('click', () => this.toggle());\n        // 点击菜单外面区域关闭菜单\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0]) &&\n                !$target.is(this.$anchor) &&\n                !contains(this.$anchor[0], $target[0])) {\n                this.close();\n            }\n        });\n        // 点击不含子菜单的菜单条目关闭菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        $document.on('click', '.mdui-menu-item', function () {\n            const $item = $(this);\n            if (!$item.find('.mdui-menu').length &&\n                $item.attr('disabled') === undefined) {\n                that.close();\n            }\n        });\n        // 绑定点击或鼠标移入含子菜单的条目的事件\n        this.bindSubMenuEvent();\n        // 窗口大小变化时，重新调整菜单位置\n        $window.on('resize', $.throttle(() => this.readjust(), 100));\n    }\n    /**\n     * 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'menu', this.$element, this);\n    }\n    /**\n     * 调整主菜单位置\n     */\n    readjust() {\n        let menuLeft;\n        let menuTop;\n        // 菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 配置参数\n        const gutter = this.options.gutter;\n        const isCovered = this.isCovered;\n        const isFixed = this.options.fixed;\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 菜单的原始宽度和高度\n        const menuWidth = this.$element.width();\n        const menuHeight = this.$element.height();\n        // 触发菜单的元素在窗口中的位置\n        const anchorRect = this.$anchor[0].getBoundingClientRect();\n        const anchorTop = anchorRect.top;\n        const anchorLeft = anchorRect.left;\n        const anchorHeight = anchorRect.height;\n        const anchorWidth = anchorRect.width;\n        const anchorBottom = windowHeight - anchorTop - anchorHeight;\n        const anchorRight = windowWidth - anchorLeft - anchorWidth;\n        // 触发元素相对其拥有定位属性的父元素的位置\n        const anchorOffsetTop = this.$anchor[0].offsetTop;\n        const anchorOffsetLeft = this.$anchor[0].offsetLeft;\n        // 自动判断菜单位置\n        if (this.options.position === 'auto') {\n            if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n                // 判断下方是否放得下菜单\n                position = 'bottom';\n            }\n            else if (anchorTop + (isCovered ? anchorHeight : 0) >\n                menuHeight + gutter) {\n                // 判断上方是否放得下菜单\n                position = 'top';\n            }\n            else {\n                // 上下都放不下，居中显示\n                position = 'center';\n            }\n        }\n        else {\n            position = this.options.position;\n        }\n        // 自动判断菜单对齐方式\n        if (this.options.align === 'auto') {\n            if (anchorRight + anchorWidth > menuWidth + gutter) {\n                // 判断右侧是否放得下菜单\n                align = 'left';\n            }\n            else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n                // 判断左侧是否放得下菜单\n                align = 'right';\n            }\n            else {\n                // 左右都放不下，居中显示\n                align = 'center';\n            }\n        }\n        else {\n            align = this.options.align;\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            menuTop =\n                (isCovered ? 0 : anchorHeight) +\n                    (isFixed ? anchorTop : anchorOffsetTop);\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            menuTop =\n                (isCovered ? anchorHeight : 0) +\n                    (isFixed ? anchorTop - menuHeight : anchorOffsetTop - menuHeight);\n        }\n        else {\n            transformOriginY = '50%';\n            // =====================在窗口中居中\n            // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n            // 级联菜单内部不允许出现滚动条\n            let menuHeightTemp = menuHeight;\n            // 简单菜单比窗口高时，限制菜单高度\n            if (!this.isCascade) {\n                if (menuHeight + gutter * 2 > windowHeight) {\n                    menuHeightTemp = windowHeight - gutter * 2;\n                    this.$element.height(menuHeightTemp);\n                }\n            }\n            menuTop =\n                (windowHeight - menuHeightTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetTop - anchorTop);\n        }\n        this.$element.css('top', `${menuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            menuLeft = isFixed\n                ? anchorLeft + anchorWidth - menuWidth\n                : anchorOffsetLeft + anchorWidth - menuWidth;\n        }\n        else {\n            transformOriginX = '50%';\n            //=======================在窗口中居中\n            // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n            let menuWidthTemp = menuWidth;\n            // 菜单比窗口宽，限制菜单宽度\n            if (menuWidth + gutter * 2 > windowWidth) {\n                menuWidthTemp = windowWidth - gutter * 2;\n                this.$element.width(menuWidthTemp);\n            }\n            menuLeft =\n                (windowWidth - menuWidthTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n        }\n        this.$element.css('left', `${menuLeft}px`);\n        // 设置菜单动画方向\n        this.$element.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 调整子菜单的位置\n     * @param $submenu\n     */\n    readjustSubmenu($submenu) {\n        const $item = $submenu.parent('.mdui-menu-item');\n        let submenuTop;\n        let submenuLeft;\n        // 子菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 子菜单的原始宽度和高度\n        const submenuWidth = $submenu.width();\n        const submenuHeight = $submenu.height();\n        // 触发子菜单的菜单项的宽度高度\n        const itemRect = $item[0].getBoundingClientRect();\n        const itemWidth = itemRect.width;\n        const itemHeight = itemRect.height;\n        const itemLeft = itemRect.left;\n        const itemTop = itemRect.top;\n        // 判断菜单上下位置\n        if (windowHeight - itemTop > submenuHeight) {\n            // 判断下方是否放得下菜单\n            position = 'bottom';\n        }\n        else if (itemTop + itemHeight > submenuHeight) {\n            // 判断上方是否放得下菜单\n            position = 'top';\n        }\n        else {\n            // 默认放在下方\n            position = 'bottom';\n        }\n        // 判断菜单左右位置\n        if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n            // 判断右侧是否放得下菜单\n            align = 'left';\n        }\n        else if (itemLeft > submenuWidth) {\n            // 判断左侧是否放得下菜单\n            align = 'right';\n        }\n        else {\n            // 默认放在右侧\n            align = 'left';\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            submenuTop = '0';\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            submenuTop = -submenuHeight + itemHeight;\n        }\n        $submenu.css('top', `${submenuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            submenuLeft = itemWidth;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            submenuLeft = -submenuWidth;\n        }\n        $submenu.css('left', `${submenuLeft}px`);\n        // 设置菜单动画方向\n        $submenu.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 打开子菜单\n     * @param $submenu\n     */\n    openSubMenu($submenu) {\n        this.readjustSubmenu($submenu);\n        $submenu\n            .addClass('mdui-menu-open')\n            .parent('.mdui-menu-item')\n            .addClass('mdui-menu-item-active');\n    }\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param $submenu\n     */\n    closeSubMenu($submenu) {\n        // 关闭子菜单\n        $submenu\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => $submenu.removeClass('mdui-menu-closing'))\n            // 移除激活状态的样式\n            .parent('.mdui-menu-item')\n            .removeClass('mdui-menu-item-active');\n        // 循环关闭嵌套的子菜单\n        $submenu.find('.mdui-menu').each((_, menu) => {\n            const $subSubmenu = $(menu);\n            $subSubmenu\n                .removeClass('mdui-menu-open')\n                .addClass('mdui-menu-closing')\n                .transitionEnd(() => $subSubmenu.removeClass('mdui-menu-closing'))\n                .parent('.mdui-menu-item')\n                .removeClass('mdui-menu-item-active');\n        });\n    }\n    /**\n     * 切换子菜单状态\n     * @param $submenu\n     */\n    toggleSubMenu($submenu) {\n        $submenu.hasClass('mdui-menu-open')\n            ? this.closeSubMenu($submenu)\n            : this.openSubMenu($submenu);\n    }\n    /**\n     * 绑定子菜单事件\n     */\n    bindSubMenuEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击打开子菜单\n        this.$element.on('click', '.mdui-menu-item', function (event) {\n            const $item = $(this);\n            const $target = $(event.target);\n            // 禁用状态菜单不操作\n            if ($item.attr('disabled') !== undefined) {\n                return;\n            }\n            // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n            if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n                return;\n            }\n            // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n            if (!$target.parents('.mdui-menu-item').first().is($item)) {\n                return;\n            }\n            // 当前菜单的子菜单\n            const $submenu = $item.children('.mdui-menu');\n            // 先关闭除当前子菜单外的所有同级子菜单\n            $item\n                .parent('.mdui-menu')\n                .children('.mdui-menu-item')\n                .each((_, item) => {\n                const $tmpSubmenu = $(item).children('.mdui-menu');\n                if ($tmpSubmenu.length &&\n                    (!$submenu.length || !$tmpSubmenu.is($submenu))) {\n                    that.closeSubMenu($tmpSubmenu);\n                }\n            });\n            // 切换当前子菜单\n            if ($submenu.length) {\n                that.toggleSubMenu($submenu);\n            }\n        });\n        if (this.options.subMenuTrigger === 'hover') {\n            // 临时存储 setTimeout 对象\n            let timeout = null;\n            let timeoutOpen = null;\n            this.$element.on('mouseover mouseout', '.mdui-menu-item', function (event) {\n                const $item = $(this);\n                const eventType = event.type;\n                const $relatedTarget = $(event.relatedTarget);\n                // 禁用状态的菜单不操作\n                if ($item.attr('disabled') !== undefined) {\n                    return;\n                }\n                // 用 mouseover 模拟 mouseenter\n                if (eventType === 'mouseover') {\n                    if (!$item.is($relatedTarget) &&\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 用 mouseout 模拟 mouseleave\n                else if (eventType === 'mouseout') {\n                    if ($item.is($relatedTarget) ||\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 当前菜单项下的子菜单，未必存在\n                const $submenu = $item.children('.mdui-menu');\n                // 鼠标移入菜单项时，显示菜单项下的子菜单\n                if (eventType === 'mouseover') {\n                    if ($submenu.length) {\n                        // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n                        const tmpClose = $submenu.data('timeoutClose.mdui.menu');\n                        if (tmpClose) {\n                            clearTimeout(tmpClose);\n                        }\n                        // 如果当前子菜单已经打开，不操作\n                        if ($submenu.hasClass('mdui-menu-open')) {\n                            return;\n                        }\n                        // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n                        clearTimeout(timeoutOpen);\n                        // 准备打开当前子菜单\n                        timeout = timeoutOpen = setTimeout(() => that.openSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutOpen.mdui.menu', timeout);\n                    }\n                }\n                // 鼠标移出菜单项时，关闭菜单项下的子菜单\n                else if (eventType === 'mouseout') {\n                    if ($submenu.length) {\n                        // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n                        const tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n                        if (tmpOpen) {\n                            clearTimeout(tmpOpen);\n                        }\n                        // 准备关闭当前子菜单\n                        timeout = setTimeout(() => that.closeSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutClose.mdui.menu', timeout);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-menu-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n            this.$element.css({\n                top: '',\n                left: '',\n                width: '',\n                position: 'fixed',\n            });\n        }\n    }\n    /**\n     * 切换菜单状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjust();\n        this.$element\n            // 菜单隐藏状态使用使用 fixed 定位。\n            .css('position', this.options.fixed ? 'fixed' : 'absolute')\n            .addClass('mdui-menu-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 菜单开始关闭时，关闭所有子菜单\n        this.$element.find('.mdui-menu').each((_, submenu) => {\n            this.closeSubMenu($(submenu));\n        });\n        this.$element\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => this.transitionEnd());\n    }\n}\nmdui.Menu = Menu;\n\nconst customAttr$9 = 'mdui-menu';\nconst dataName$3 = '_mdui_menu';\n$(() => {\n    $document.on('click', `[${customAttr$9}]`, function () {\n        const $this = $(this);\n        let instance = $this.data(dataName$3);\n        if (!instance) {\n            const options = parseOptions(this, customAttr$9);\n            const menuSelector = options.target;\n            // @ts-ignore\n            delete options.target;\n            instance = new mdui.Menu($this, menuSelector, options);\n            $this.data(dataName$3, instance);\n            instance.toggle();\n        }\n    });\n});\n\nexport default mdui;\n//# sourceMappingURL=mdui.esm.js.map\n"],"names":["isFunction","target","isString","isNumber","isBoolean","isUndefined","isNull","isWindow","Window","isDocument","Document","isElement","Element","isNode","Node","isIE","window","document","documentMode","isArrayLike","length","isObjectLike","toElement","documentElement","toCamelCase","string","replace","_","letter","toUpperCase","toKebabCase","replacer","toLowerCase","getComputedStyleValue","element","name","getComputedStyle","getPropertyValue","isBorderBox","getExtraWidth","direction","extra","position","reduce","prev","index","prop","parseFloat","getStyle","valueNumber","getBoundingClientRect","getChildNodesArray","parent","tempParent","createElement","innerHTML","slice","call","childNodes","returnFalse","cssNumber","each","callback","i","keys","Object","JQ","constructor","arr","this","item","get$","$","selector","test","readyState","body","addEventListener","html","trim","toCreate","tags","li","tr","td","th","tbody","option","childTag","parentTag","indexOf","isIdSelector","match","querySelectorAll","getElementById","fn","prototype","setTimeout","addClass","mdui","contains","container","merge","first","second","value","push","get","undefined","find","foundElements","handlers","mduiElementId","getElementId","key","parse","type","parts","split","ns","sort","join","matcherFor","RegExp","getHandlers","func","event","filter","handler","add","types","data","elementId","useCapture","forEach","callFn","e","elem","result","apply","_detail","concat","preventDefault","stopPropagation","proxyFn","_ns","_data","reverse","id","proxy","remove","handlersInElement","removeEvent","removeEventListener","extend","object1","objectN","unshift","object","param","obj","Array","isArray","args","destructure","keyTmp","v","encodeURIComponent","trigger","extraParameters","eventObject","eventParams","bubbles","cancelable","isMouseEvent","MouseEvent","detail","CustomEvent","dispatchEvent","globalOptions","ajaxEvents","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","mergeOptions","options","defaults","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","contentType","timeout","global","callbacks","ajax","isCanceled","mergedOptions","location","toString","params","result1","result2","XHR","textStatus","Promise","resolve","reject","Date","now","xhr","XMLHttpRequest","open","setRequestHeader","crossDomain","$2","host","xhrTimeout","onload","clearTimeout","isHttpStatusSuccess","status","responseData","JSON","responseText","err","Error","responseType","response","onerror","statusText","onabort","abort","send","ArrayBuffer","Blob","FormData","ajaxSetup","dataNS","setObjectToElement","map","elements","ret","removeData","nameItem","unique","val","isPlainText","dir","$elements","nameIndex","node","is","shift","className","arguments","classes","getAttribute","cls","classList","setAttribute","$element","$target","parentNode","newItem","cloneNode","existingItem","nextSibling","insertBefore","targets","off","on","one","_this","origCallback","eventName","clone","isMatched","matches","msMatchesSelector","$compareWith","compare","removeChild","childLength","child","appendChild","contents","content","extraChilds","$result","set","removeAttribute","style","k","children","__","childNode","eq","$nodes","closest","matched","parents","rbrace","getData","dataAttr","nodeType","handleExtraWidth","funcIndex","includeMargin","multiply","getExtraWidthValue","clientProp","scrollProp","offsetProp","innerProp","doc","Math","max","elementIndex","computedValue","dimension","css","suffix","numerical","floatStyle","get$1","getClientRects","top","left","rect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","set$1","currentOffset","currentTopString","currentLeftString","currentTop","currentLeft","calculatePosition","currentPosition","resultData","attrs","attributes","empty","$selector","has","$targets","hasClass","funcName","margin","isSet","hide","display","props","propName","firstElement","outerHTML","selected","checked","last","not","$excludes","offsetParent","parentOffset","offset","$offsetParent","removeAttr","attributeName","names","removeProp","replaceWith","newContent","before","replaceAll","serializeArray","HTMLFormElement","nodeName","disabled","valueArr","serialize","elementDisplay","defaultDisplay","show","siblings","prevAll","nextAll","toggle","reflow","clientLeft","transition","duration","webkitTransitionDuration","transitionDuration","transitionEnd","that","events","fireCallback","transformOrigin","webkitTransformOrigin","transform","webkitTransform","entries","mutation","apiInit","selectors","$this","showOverlay","zIndex","$overlay","appendTo","level","hideOverlay","force","removeClass","lockScreen","$body","newBodyWidth","width","unlockScreen","throttle","delay","timer","GUID","componentEvent","componentName","instance","parameters","inst","fullEventName","jQuery","guid","s4","floor","random","substring","$document","$window","DEFAULT_OPTIONS","tolerance","initialClass","pinnedClass","unpinnedClass","Headroom","state","isEnable","lastScrollY","rafId","down","up","enable","onScroll","requestAnimationFrame","currentScrollY","scrolled","abs","toleranceExceeded","unpin","pin","triggerEvent","disable","cancelAnimationFrame","getState","parseOptions","attr","Function","customAttr","DEFAULT_OPTIONS$1","accordion","CollapseAbstract","classPrefix","getNamespace","classItem","classItemOpen","classHeader","classBody","bindEvent","$header","$item","$items","getItems","close","isOpen","getItem","$content","height","scrollHeight","openAll","closeAll","Collapse","customAttr$1","Panel","customAttr$2","Table","$thRow","$tdRows","$thCheckbox","$tdCheckboxs","selectable","selectedRow","init","updateThCheckbox","updateTdCheckbox","updateNumericCol","createCheckboxHTML","tag","updateThCheckboxStatus","checkbox","tdRowsLength","indeterminate","rowSelectedClass","row","$row","$checkbox","prependTo","isCheckedAll","numericClass","isNumericCol","$td","dataName","updateTables","startEvent","moveEvent","endEvent","cancelEvent","unlockEvent","touches","isAllow","register","$ripple","button","touchPosition","TouchEvent","touchStartX","pageX","touchStartY","pageY","innerHeight","innerWidth","center","x","y","diameter","pow","translate","removeRipple","$wave","removeTimer","wave","showRipple","hidden","hideRipple","touchMove","defaultData","reInit","domLoadedEvent","inputEvent","input","$input","eventType","inputType","$textfield","validity","valid","inputValue","hasExtraSpace","outerHeight","maxLength","text","updateValueStyle","$slider","$track","_slider_$track","$fill","_slider_$fill","$thumb","_slider_$thumb","_slider_$input","min","_slider_min","_slider_max","isDisabled","_slider_disabled","isDiscrete","_slider_discrete","$thumbText","_slider_$thumbText","percent","append","focus","updateTextFields","rangeSelector","updateSliders","DEFAULT_OPTIONS$2","Fab","$btn","$dial","$dialBtns","btn","transitionDelay","webkitTransitionDelay","customAttr$3","DEFAULT_OPTIONS$3","gutter","Select","size","$selected","$menu","selectedIndex","selectedText","selectedValue","$native","uniqueID","handleUpdate","readjustMenu","windowHeight","elementHeight","$itemFirst","itemHeight","itemMargin","parseInt","menuWidth","menuHeight","elementTop","transformOriginY","menuMarginTop","menuMaxHeight","menuMaxMarginTop","menuTop","itemsData","textContent","after","customAttr$4","DEFAULT_OPTIONS$4","loop","Tab","activeIndex","$tabs","$indicator","hash","tab","setActive","setIndicatorPosition","bindTabEvent","$tab","clickEvent","targetId","substr","$activeTab","activeTabOffset","scrollLeft","next","$oldTabs","$newTabs","oldTabsElement","newTabsElement","customAttr$5","DEFAULT_OPTIONS$5","overlay","swipe","Drawer","isDesktop","swipeSupport","openNavEventHandler","swipeStartX","swiping","maybeSwiping","swipeAreaWidth","setPosition","translateX","rtlTranslateMultiplier","transformCSS","transitionCSS","cleanPosition","webkitTransition","getMaxTranslateX","getTranslateX","currentX","onBodyTouchEnd","touchX","changedTouches","translateRatio","swipingState","touchmove","onBodyTouchMove","touchend","touchcancel","touchY","dXAbs","dYAbs","threshold","onBodyTouchStart","enableSwipeHandling","customAttr$6","$drawer","queue","dequeue","DEFAULT_OPTIONS$6","history","modal","closeOnEsc","closeOnCancel","closeOnConfirm","destroyOnClosed","currentInst","queueName","isLockScreen","Dialog","cancel","confirm","readjust","$title","$actions","hashchangeEvent","overlayClick","destroy","doOpen","historyBack","back","keyCode","customAttr$7","dataName$1","$dialog","DEFAULT_BUTTON","bold","onClick","DEFAULT_OPTIONS$7","title","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","dialog","_a","_b","buttonsHTML","HTML","DEFAULT_OPTIONS$8","confirmText","alert","onConfirm","DEFAULT_OPTIONS$9","cancelText","onCancel","DEFAULT_OPTIONS$a","maxlength","defaultValue","confirmOnEnter","prompt","label","onCancelClick","onConfirmClick","DEFAULT_OPTIONS$b","Tooltip","timeoutId","marginLeft","marginTop","targetProps","targetMargin","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","targetOffset","oldOptions","customAttr$8","dataName$2","DEFAULT_OPTIONS$c","message","buttonText","buttonColor","closeOnButtonClick","closeOnOutsideClick","onButtonClick","currentInst$1","queueName$1","Snackbar","buttonColorStyle","buttonColorClass","snackbarHeight","clientHeight","translateY","layerHTML","fillHTML","spinner","$spinner","layer","snackbar","$bottomNav","isThis","updateSpinners","DEFAULT_OPTIONS$d","align","fixed","covered","subMenuTrigger","subMenuDelay","Menu","anchorSelector","menuSelector","$anchor","isCascade","isCovered","bindSubMenuEvent","menuLeft","windowWidth","isFixed","transformOriginX","anchorRect","anchorTop","anchorLeft","anchorHeight","anchorWidth","anchorBottom","anchorRight","anchorOffsetTop","offsetTop","anchorOffsetLeft","offsetLeft","menuHeightTemp","menuWidthTemp","readjustSubmenu","$submenu","submenuTop","submenuLeft","submenuWidth","submenuHeight","itemRect","itemWidth","itemLeft","itemTop","openSubMenu","closeSubMenu","menu","$subSubmenu","toggleSubMenu","$tmpSubmenu","timeoutOpen","$relatedTarget","relatedTarget","tmpClose","tmpOpen","submenu","customAttr$9","dataName$3"],"sourceRoot":""}